openapi: 3.0.1
info:
  title: BankAssist SMT Core Banking API Specification
  description: kore.ai banking bot apis.
  version: "1.1"
servers:
- url: https://localhost:8080/smt
security:
- bearerAuth: []
tags:
- name: Authentication
  description: Authentication related APIs
- name: Accounts
  description: account related information
- name: Customers
  description: customer information
- name: Transactions
  description: Customer Transactions
- name: Transfer
  description: transfer related information
- name: SecureMessage
  description: secure message related
- name: IVR Authentication
  description: APIs used to validate pins
- name: Request
  description: APIs that is used to post the requests
- name: Meta
  description: Internal APIs
paths:
  /submitRequest:
    post:
      tags:
      - Meta
      summary: Submit Request
      description: Meta API request
      operationId: submit_request
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/submitRequest'
      responses:
        "200":
          description: successful operation
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.meta_controller
  /authToken:
    post:
      tags:
      - Authentication
      summary: AuthToken
      description: Get authentication token
      operationId: auth_token
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthTokenResponse'
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.authentication_controller
  /deposit:
    post:
      tags:
      - Accounts
      summary: Deposit
      description: Deposit amount to customer's account
      operationId: deposit
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/depositRequest'
        required: false
      responses:
        "200":
          description: Deposit success
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.accounts_controller
  /GetAccountInfo:
    post:
      tags:
      - Accounts
      summary: GetAccountInfo
      description: fetch customer account details
      operationId: get_account_info
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X_Auth_token
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X_CORRELATION_ID
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountRequest'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountData'
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.accounts_controller
  /GetAccountDetails:
    post:
      tags:
      - Accounts
      summary: to get the details of the mentioned customer account
      description: fetch customer account details
      operationId: get_account_details
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X_Auth_token
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X_CORRELATION_ID
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountDetailsRequest'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountResponse'
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-openapi-router-controller: swagger_server.controllers.accounts_controller
  /GetAccountsLimit:
    post:
      tags:
      - Accounts
      summary: to get the limits of customer accounts
      description: fetch customer account limits
      operationId: get_accounts_limit
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X_Auth_token
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X_CORRELATION_ID
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitRequest'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/limitsResponse'
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-openapi-router-controller: swagger_server.controllers.accounts_controller
  /GetAccountSpecificLimitsInfo:
    post:
      tags:
      - Accounts
      summary: to get the limits of customer accounts
      description: fetch customer account limits
      operationId: get_account_specific_limits_info
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X_Auth_token
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X_CORRELATION_ID
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/viewLimitRequest'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/viewlimitsResponse'
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-openapi-router-controller: swagger_server.controllers.accounts_controller
  /UpdateAccountInfo:
    put:
      tags:
      - Accounts
      summary: UpdateAccountInfo
      description: Update customer account details
      operationId: update_account_info
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X_Auth_token
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X_CORRELATION_ID
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateaccountRequest'
        required: true
      responses:
        "200":
          description: successful operation
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.accounts_controller
  /GetCustomerInfo:
    post:
      tags:
      - Customers
      summary: GetCustomerInfo
      description: fetch customer information
      operationId: get_customer_info
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X_Auth_token
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X_CORRELATION_ID
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerData'
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: request body
      x-openapi-router-controller: swagger_server.controllers.customers_controller
  /UpdateCustomerInfo:
    put:
      tags:
      - Customers
      summary: UpdateCustomerInfo
      description: Update customer information
      operationId: update_customer_info
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X_Auth_token
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X_CORRELATION_ID
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateCustomerRequest'
        required: true
      responses:
        "200":
          description: successful operation
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: request body
      x-openapi-router-controller: swagger_server.controllers.customers_controller
  /GetTransactions:
    post:
      tags:
      - Transactions
      summary: GetTransactions
      description: Fetch transactions information
      operationId: get_transactions
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X_Auth_token
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X_CORRELATION_ID
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: number
      requestBody:
        description: Transaction Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTransactionsReq'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionsRes'
      x-codegen-request-body-name: Body
      x-openapi-router-controller: swagger_server.controllers.transactions_controller
  /TransferFunds:
    post:
      tags:
      - Transfer
      summary: TransferFunds
      description: Transfers funds between accounts
      operationId: transfer_funds
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userCode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferRequest'
        required: true
      responses:
        "200":
          description: Transaction success
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.transfer_controller
  /GetScheduleTransfers:
    post:
      tags:
      - Transfer
      summary: GetScheduleTransfers
      description: Fetches the scheduled transfers
      operationId: get_schedule_transfers
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userCode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferScheduleListRequest'
        required: false
      responses:
        "200":
          description: schedule transfer list response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferScheduleListResponse'
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.transfer_controller
  /UpdateScheduleTransfers:
    put:
      tags:
      - Transfer
      summary: UpdateScheduleTransfers
      description: Update the scheduled transfers
      operationId: update_schedule_transfers
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userCode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferScheduleUpdateRequest'
        required: false
      responses:
        "200":
          description: Scheduled transfer updated successfully
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.transfer_controller
  /DeleteScheduleTransfers:
    post:
      tags:
      - Transfer
      summary: DeleteScheduleTransfers
      description: Delete the scheduled transfer
      operationId: delete_schedule_transfers
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userCode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteScheduleTransferRequest'
        required: false
      responses:
        "200":
          description: Scheduled transfer deleted successfully
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.transfer_controller
  /AddRecurringTransfers:
    post:
      tags:
      - Transfer
      summary: AddRecurringTransfers
      description: Adds the recurring transfers
      operationId: add_recurring_transfers
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userCode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferRecurringAddRequest'
        required: false
      responses:
        "200":
          description: schedule transfer added successfully
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.transfer_controller
  /GetRecurringTransfers:
    post:
      tags:
      - Transfer
      summary: GetRecurringTransfers
      description: Fetches all the recurring transfers
      operationId: get_recurring_transfers
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userCode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferRecurringListRequest'
        required: false
      responses:
        "200":
          description: schedule transfer list response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferRecurringListResponse'
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.transfer_controller
  /UpdateRecurringTransfers:
    put:
      tags:
      - Transfer
      summary: UpdateRecurringTransfers
      description: Update the recurring transfers
      operationId: update_recurring_transfers
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userCode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferRecurringUpdateRequest'
        required: false
      responses:
        "200":
          description: Recurring transfer updated successfully
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.transfer_controller
  /DeleteRecurringTransfers:
    post:
      tags:
      - Transfer
      summary: DeleteRecurringTransfers
      description: Delete the recurring transfers
      operationId: delete_recurring_transfers
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userCode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteRecurringTransferRequest'
        required: false
      responses:
        "200":
          description: Recurring transfer deleted successfully
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.transfer_controller
  /resetPassword:
    post:
      tags:
      - Customers
      summary: resetPassword
      description: It allows to reset the password
      operationId: reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resetpasswordBody'
        required: false
      responses:
        "200":
          description: password has been updated successfully.
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.customers_controller
  /debitcardInfoValidation:
    post:
      tags:
      - Customers
      summary: debitcardInfoValidation
      description: for validating card info
      operationId: debitcard_info_validation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/debitcardInfobody'
        required: false
      responses:
        "200":
          description: Validated Successfully
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.customers_controller
  /personalInfoValidation:
    post:
      tags:
      - Customers
      summary: personalInfoValidation
      description: for validating personal info
      operationId: personal_info_validation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/personalInfobody'
        required: false
      responses:
        "200":
          description: Validated Successfully
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.customers_controller
  /disputeTransaction:
    post:
      tags:
      - Transactions
      summary: disputeTransaction
      description: dispute a transaction
      operationId: dispute_transaction
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disputeRequest'
        required: false
      responses:
        "200":
          description: Dispute Transactions reported successfully
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.transactions_controller
  /ccPay:
    post:
      tags:
      - Transfer
      summary: ccPay
      description: to pay cc bill
      operationId: cc_pay
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ccRequest'
        required: false
      responses:
        "200":
          description: Credit Card payment scheduled successfully
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.transfer_controller
  /GetCCSchedule:
    post:
      tags:
      - Transfer
      summary: GetCCSchedule
      description: Fetch cc payment list
      operationId: get_cc_schedule
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ccScheduleRequest'
        required: false
      responses:
        "200":
          description: schedule transfer list response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CCListResponse'
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.transfer_controller
  /sendsecuremessage:
    post:
      tags:
      - SecureMessage
      summary: sendsecuremessage
      description: send secure message
      operationId: sendsecuremessage
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecureMessageRequest'
        required: false
      responses:
        "200":
          description: success
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.secure_message_controller
  /locateProfile:
    post:
      tags:
      - Customers
      summary: locateProfile
      description: get profile details
      operationId: locate_profile
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/locateProfileRequest'
        required: true
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locateProfileResponse'
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.customers_controller
  /validateUser:
    post:
      tags:
      - IVR Authentication
      summary: to validate the exiting user
      description: to validate the in of existing user
      operationId: validate_user
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/existinguser'
        required: true
      responses:
        "200":
          description: PINs matched
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.ivr_authentication_controller
  /validatePIN:
    post:
      tags:
      - IVR Authentication
      summary: to validate the pins entered by the new user
      description: to validate the pins entered by the new user
      operationId: validate_pin
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newuser'
        required: true
      responses:
        "200":
          description: PINs matched
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.ivr_authentication_controller
  /validatePINRules:
    post:
      tags:
      - IVR Authentication
      summary: to validate if pin entered by new user follows pin rules
      description: to validate if pin entered by new user follows pin rules
      operationId: validate_pin_rules
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newuserpinrules'
        required: true
      responses:
        "200":
          description: PIN rules satisfied
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.ivr_authentication_controller
  /getRequestStatus:
    post:
      tags:
      - Accounts
      summary: to fetch the account closure status
      description: to fetch the account closure status
      operationId: get_request_status
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestStatusResponse'
        required: true
      responses:
        "200":
          description: success
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.accounts_controller
  /request:
    post:
      tags:
      - Request
      summary: to place the request
      description: to place the request
      operationId: send_request
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request'
        required: true
      responses:
        "200":
          description: success
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.request_controller
  /enableEStatement:
    put:
      tags:
      - Customers
      summary: to enable or disable e or paper statements at profile level
      description: to enable or disable e or paper statements at profile level
      operationId: enable_e_statement
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profileEStatementRequest'
        required: true
      responses:
        "200":
          description: success
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.customers_controller
  /RequestChequeBook:
    put:
      tags:
      - Accounts
      summary: to update the cheque book details of customer accounts
      description: Update customer cheque book details
      operationId: request_cheque_book
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chequeBookRequest'
        required: true
      responses:
        "200":
          description: successful operation
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.accounts_controller
  /sendOTP:
    post:
      tags:
      - Customers
      summary: sendOTP
      description: sends OTP for reset password
      operationId: send_otp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPRequest'
        required: false
      responses:
        "200":
          description: verification code has been sent to your mobile number
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: request body
      x-openapi-router-controller: swagger_server.controllers.customers_controller
  /verifyOTP:
    post:
      tags:
      - Customers
      summary: verifyOTP
      description: ' to verify OTP for reset password'
      operationId: verify_otp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verifyOTPbody'
        required: false
      responses:
        "200":
          description: OTP verifid successfully
          content: {}
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-codegen-request-body-name: request body
      x-openapi-router-controller: swagger_server.controllers.customers_controller
  /deeplink:
    post:
      tags:
      - Deeplink
      summary: to fetch the deeplink
      description: to fetch the deeplink
      operationId: get_deeplink
      parameters:
      - name: koreUserId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: botId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: tenantId
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: channel
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deeplink'
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deeplinkresponse'
        "401":
          description: "Error: Authorisation failed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        "404":
          description: "Error: Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
      x-openapi-router-controller: swagger_server.controllers.deeplink_controller
components:
  schemas:
    err:
      type: object
      properties:
        err:
          $ref: '#/components/schemas/err_err'
    getAccountData:
      type: object
      properties:
        customerId:
          type: number
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/getAccountData_accounts'
      example:
        customerId: 1045300
        accounts:
        - customerId: 1045300
          accountName: Savings Account
          accountNickname: Vacation Fund
          accountNumber: 1043693
          accountType: Savings Account
          status: active
          currency: USD
          availableBalance: 2256.93
          currentBalance: 20
          minimumBalance: 1500
          statementDate: ""
          activatedDate: 01-01-2011
          deactivatedDate: ""
          lastUpdated: 01-07-2019
          image: ""
          dueDate: ""
          personalBankerName: William Smith
          personalBankerContact:
            email: William.Smith@bank.com
            mobileNumber: (904) 236-2345
          maxTransactionLimit: 400000
          cardType: Discover
          cardName: Wells Fargo
          P2PLimit: 300
          CardStatus: ""
          routingNumber: 122105159
          availableCashLimit: 500
          loanOriginationDate: ""
          propertyAddress: ""
          lastDrawDate: ""
          productName: '"Boost Savings"'
          productCode: MS02
          loanMaturityDate: ""
          location: "172 W Flagler Street, Miami, Florida, 33130"
          email: test12@gmail.com
          fdType: Short Term
          phone: 14085040880
          expDate: ""
          maturityDate: ""
          internalTransferFromEnabled: true
          internalTransferToEnabled: true
          p2pEnabled: true
          paybillEnabled: true
          swiftCode: ""
          branchName: ""
          bankName: ""
          isStatement: false
          isPrimaryMobileNumber: false
          isAlternateMobileNumber: false
          totalTenure: "4"
          remainingTenure: "1"
          debitAccountNumber: "12345678"
          lateFee: 10
          bounceCharge: 20
          totalCharges: 30
          overDueAmount: 15
          cardDetails:
            cardName: VISA Millenium Debit
            cardNumber: "1234456778904268"
            cardStatus: active
            cardImage: ""
            cardType: primary
            expDate: "0229"
            displayCardStatus: Temporary Lock
            primaryCard: "4268"
            cardChannelInfo:
              ATM:
                enable: false
                limit: 20000
              offline:
                enable: true
                limit: 20000
              international:
                enable: false
                limit: 100000
              online:
                enable: false
                limit: 20000
              contactless:
                enable: true
                limit: 20000
            cardRestrictions:
              countries:
              - countrycode: IND
              MCC:
              - name: Lodging
                description: Lodging
                blocked: true
            rewardPoints: 1000
            blockReason: lost
            nameOnCard: ""
            cardNetwork: ""
            autopay:
              enabled: true
              sourceAccountId: "12345678"
              paymentType: full
              onStatementDate: true
              dayOfMonth: "01"
            dueAmount: 245
            dueDate: 01-07-2023
            minimumPaymentDue: 100
            partialPaymentPaid: 659
    CustomerRequest:
      required:
      - customerId
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
    deeplink:
      type: object
      properties:
        usecase:
          type: array
          description: "addbeneficiary,accountclosurestatus_followup,travel_followup,fundtransferstatusinquiry,transferfunds"
          items:
            type: string
      example:
        usecase:
        - addbeneficiary
    deeplinkresponse:
      type: array
      example:
      - usecase: addbeneficiary
        link: www.google.com
        linkType: deeplink
      items:
        $ref: '#/components/schemas/deeplinkresponse_inner'
    deeplinkresponse_inner:
      type: object
      properties:
        usecase:
          type: string
        link:
          type: string
          description: URL
        linkType:
          type: string
          description: "deeplink,weburl,internalurl are enums"
    accountRequest:
      required:
      - customerId
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
    GetCustomerData:
      type: object
      properties:
        alternatePhoneNumber:
          type: number
        customerId:
          type: string
        email:
          type: string
        identificationNumber:
          type: number
        identificationType:
          type: string
        image:
          type: string
        isAlternateMobileNumber:
          type: boolean
        isPrimaryMobileNumber:
          type: boolean
        location:
          type: string
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        personalBanker:
          $ref: '#/components/schemas/GetCustomerData_personalBanker'
        phone:
          type: number
        securityQuestions:
          type: array
          items:
            type: string
        segmentId:
          type: number
      example:
        alternatePhoneNumber: 14076073325
        customerId: 1045300
        email: test@gmail.com
        firstName: John
        identificationType: ""
        image: ""
        isAlternateMobileNumber: true
        isPrimaryMobileNumber: true
        lastName: Jones
        location: "1234 Mickey Lane, Orlando, Florida, 12345"
        name: John
        personalBanker:
          name: William Smith
          email: William.Smith@bank.com
          mobileNumber: (904) 236-2345
        phone: 14076073325
        securityQuestions:
        - Q: What is the name of the Grade School that you attended?
          A: DJHS
        - Q: What is the name of your childhood best friend?
          A: Sam
        segmentId: 1
    resetpasswordBody:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          example: John
        password:
          type: string
          example: "1111"
    MetaInfo:
      title: MetaInfo
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      example:
        name: string
        value: string
    GetTransactionsReq:
      required:
      - accountNumber
      type: object
      properties:
        customerId:
          type: string
        accountNumber:
          type: array
          items:
            type: string
        numOfTransactions:
          type: number
        status:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        sort:
          $ref: '#/components/schemas/GetTransactionsReq_sort'
        transactionAmount:
          $ref: '#/components/schemas/GetTransactionsReq_transactionAmount'
        category:
          type: array
          items:
            $ref: '#/components/schemas/GetTransactionsReq_category'
        debitOrCredit:
          type: string
      example:
        customerId: 1045300
        accountNumber:
        - "1045301"
        category:
        - codeType: MCC
          value:
          - - 5811
            - 5814
          source: Internal
        startDate: 2021-04-01T00:00:00.000+0000
        endDate: 2021-04-30T00:00:00.000+0000
        status: Posted
        transactionAmount:
          amount:
            gt: 1000
          currency: USD
    OTPRequest:
      required:
      - customerId
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
    verifyOTPbody:
      required:
      - code
      - customerId
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
        code:
          type: number
          example: 1234
    GetTransactionsRes:
      type: array
      example:
      - customerId: 1045300
        transactionId: 999997
        accountNumber: "1042345"
        timestamp: 1611772200000
        amount: 4.67
        currency: USD
        debitOrCredit: Debit
        description: "Starbucks #12676, Orlando FL"
        paymentMode: ""
        DBANames: Starbucks
        status: Posted
        transactionType: "1011"
        MCCCode: 5812
        name: ""
        address: ""
        street: ""
        city: "Orlando, FL"
        state: FL
        zip: ""
        country: ""
        phoneNumber: ""
        CCTier2Data: ""
        receiverFirstName: ""
        receiverLastName: ""
        receiverBank: ""
        receiverCountry: ""
        senderFirstName: ""
        senderLastName: ""
        senderBank: ""
        senderCountry: ""
        id: e8613583a60688a4
      items:
        $ref: '#/components/schemas/GetTransactionsRes_sub'
    statementbody:
      required:
      - accountNumber
      type: object
      properties:
        accountNumber:
          type: array
          items:
            type: string
            example: "1042345"
    statementResponse:
      type: object
      properties:
        statementLink:
          type: string
          example: https://google.com
    disputeRequest:
      required:
      - customerId
      - transactionsData
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
        emailId:
          type: string
          example: John@yahoo.com
        transactionsData:
          type: array
          items:
            $ref: '#/components/schemas/disputeRequest_transactionsData'
    transferRequest:
      required:
      - amount
      - currency
      - customerId
      - date
      - sourceAccountId
      - targetAccountId
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
        amount:
          type: number
          example: 3
        currency:
          type: string
          example: USD
        sourceAccountId:
          type: string
          example: "1042345"
        targetAccountId:
          type: string
          example: "1042222"
        date:
          type: string
          example: 03-15-2021
        description:
          type: string
          description: "Loans/Mortgage Payment for loan payments, for internal transfer\
            \ transaction type and payment type do not exist"
          example: Internal Transfer
        TransactionType:
          type: string
          example: "1063"
        PaymentType:
          type: string
          description: it can be minimum or monthly or additional principal payment
          example: Minimum Payment
      description: transaction and payment type is for loan payments
    transferScheduleListRequest:
      required:
      - customerId
      - status
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
        status:
          type: string
          example: Pending
    transferScheduleListResponse:
      type: array
      example:
      - Type: Internal Transfer
        CustomerId: 1045300
        Amount: 11
        SourceAccountNumber: "1042222"
        TargetAccountNumber: "1042345"
        DueDate: 01/15/2021
        Currency: USD
        Status: Pending
        ScheduledDate: "1610668800000"
        NextScheduleDate: ""
        id: 97087c6c24788b1d
      items:
        $ref: '#/components/schemas/transferScheduleListResponse_sub'
    transferRecurringAddRequest:
      required:
      - amount
      - currency
      - customerId
      - sourceAccountId
      - targetAccountId
      type: object
      properties:
        customerId:
          type: number
        amount:
          type: number
        sourceAccountId:
          type: string
        targetAccountId:
          type: string
        currency:
          type: string
        status:
          type: string
        scheduledDate:
          type: number
        recurringOptions:
          $ref: '#/components/schemas/transferRecurringAddRequest_recurringOptions'
      example:
        customerId: 1045304
        amount: 39
        sourceAccountId: "1042347"
        targetAccountId: "1043699"
        currency: USD
        status: Pending
        scheduledDate: 1616544000000
        recurringOptions:
          amountType: Fixed
          frequency:
            iterate: Weekly
            duration:
              numberOfTransfers: 3
    transferRecurringListRequest:
      required:
      - customerId
      - status
      type: object
      properties:
        customerId:
          type: number
          example: 1045304
        status:
          type: string
          example: Pending
    transferRecurringListResponse:
      type: array
      example:
      - Type: Internal Recurring Transfer
        CustomerId: 1045304
        Amount: 39
        SourceAccountNumber: "1042347"
        TargetAccountNumber: "1043699"
        Currency: USD
        Status: Pending
        ScheduledDate: "1616544000000"
        recurringOptions:
          amountType: Fixed
          frequency:
            iterate: Weekly
            duration:
              numberOfTransfers: 3
        id: c14e40aad900cb15
      items:
        $ref: '#/components/schemas/transferRecurringListResponse_sub'
    transferScheduleUpdateRequest:
      required:
      - customerId
      - paymentId
      - sourceAccountId
      type: object
      properties:
        paymentId:
          type: string
        customerId:
          type: number
        amount:
          type: number
        scheduledDate:
          type: number
          description: in terms of timestamp
        sourceAccountId:
          type: string
        targetAccountId:
          type: string
      example:
        paymentId: 97087c6c24788b1d
        customerId: 1045300
        amount: 5
        sourceAccountId: "12345"
    transferRecurringUpdateRequest:
      required:
      - customerId
      - paymentId
      - sourceAccountId
      type: object
      properties:
        paymentId:
          type: string
        customerId:
          type: number
        amount:
          type: number
        scheduledDate:
          type: number
          description: in terms of timestamp
        sourceAccountId:
          type: string
        targetAccountId:
          type: string
        recurringOptions:
          $ref: '#/components/schemas/transferRecurringUpdateRequest_recurringOptions'
      example:
        recurringOptions:
          amountType: Fixed
          frequency:
            iterate: Weekly
            duration:
              numberOfTransfers: 3
          updateTransferType: Next
        sourceAccountId: "1042347"
        targetAccountId: "1043699"
        scheduledDate: 1617148800000
        paymentId: 744a77644d67e891
        customerId: 1045304
    deleteScheduleTransferRequest:
      required:
      - customerId
      - paymentId
      type: object
      properties:
        paymentId:
          type: string
          example: 97087c6c24788b1d
        updateTransferType:
          type: string
          example: all
        customerId:
          type: number
          example: 1045300
        sourceAccountId:
          type: string
          example: "1045302"
    deleteRecurringTransferRequest:
      required:
      - customerId
      - paymentId
      type: object
      properties:
        paymentId:
          type: string
          example: 744a77644d67e891
        updateTransferType:
          type: string
          example: all
        customerId:
          type: number
          example: 1045304
        sourceAccountId:
          type: string
          example: "1045302"
    ccRequest:
      required:
      - amount
      - currency
      - customerId
      - dueDate
      - sourceAccountId
      - targetAccountId
      - transactionType
      type: object
      properties:
        customerId:
          type: number
        amount:
          type: number
        currency:
          type: string
        sourceAccountId:
          type: string
        targetAccountId:
          type: string
        transactionType:
          type: number
        dueDate:
          type: string
      example:
        customerId: 1045304
        amount: 300
        currency: USD
        sourceAccountId: "1045302"
        targetAccountId: "1042224"
        transactionType: "1053"
        dueDate: 2021-03-24T00:00:00.000+0000
    ccScheduleRequest:
      required:
      - customerId
      - status
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
        status:
          type: string
          example: Pending
    CCListResponse:
      type: array
      example:
      - Type: CC
        CustomerId: 1045304
        Amount: 300
        SourceAccountNumber: "1045302"
        TargetAccountNumber: "1042224"
        DueDate: 1616544000000
        Currency: USD
        Status: Pending
        id: 2e66c147a82618db
      items:
        $ref: '#/components/schemas/CCListResponse_sub'
    SecureMessageRequest:
      type: object
      properties:
        authType:
          type: string
          example: Authorized
        firstName:
          type: string
          example: James
        lastName:
          type: string
          example: William
        email:
          type: string
          example: James@gmail.com
        phoneNumber:
          type: number
          example: 9787643445
        topic:
          type: string
          example: Routing and Account Number
        message:
          type: string
          example: Unable to find my routing number.
        availableTime:
          type: string
          example: nighttime
        chatHistory:
          type: string
          example: html formatted message sent as string
        cif:
          type: number
          example: 1045310
    depositRequest:
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
        sourceAccountId:
          type: string
          example: "1042345"
        amount:
          type: string
          example: "1042222"
        currency:
          type: string
          example: USD
        image:
          $ref: '#/components/schemas/depositRequest_image'
    updateaccountRequest:
      required:
      - accountNumber
      - customerId
      type: object
      properties:
        accountNumber:
          type: string
          example: "1042345"
        customerId:
          type: number
          example: 1045300
        email:
          type: string
          example: John@gmail.com
        alternatePhoneNumber:
          type: number
        isAlternateMobileNumber:
          type: boolean
        phone:
          type: number
        isPrimaryMobileNumber:
          type: boolean
        location:
          type: string
        isStatement:
          type: boolean
    updateCustomerRequest:
      required:
      - customerId
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
        email:
          type: string
          example: John@gmail.com
        alternatePhoneNumber:
          type: number
        isAlternateMobileNumber:
          type: boolean
        phone:
          type: number
        isPrimaryMobileNumber:
          type: boolean
        location:
          type: string
    err_err:
      type: object
      properties:
        message:
          type: string
    getAccountData_personalBankerContact:
      type: object
      properties:
        email:
          type: string
        mobileNumber:
          type: string
    getAccountData_accounts:
      type: object
      properties:
        customerId:
          type: number
        accountName:
          type: string
        accountNickname:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
        activatedDate:
          type: string
        availableBalance:
          type: number
        availableCash:
          type: number
        availableCashLimit:
          type: number
        availableCredit:
          type: number
        bankName:
          type: string
          description: IDFC specific
        branchName:
          type: string
          description: IDFC specific
        cardName:
          type: string
        cardNumber:
          type: string
        cardStatus:
          type: string
          description: "This can be any of these active, frozen, expired or blocked"
        cardType:
          type: string
        creditLimit:
          type: number
        currency:
          type: string
        currentBalance:
          type: number
        deactivatedDate:
          type: string
        dueAmount:
          type: number
        dueDate:
          type: string
        earlyWithdrawalPenalty:
          type: number
        email:
          type: string
        expDate:
          type: string
          description: "It will be a number format lets say expiry is Dec2021, 1221\
            \ will be its value."
        fdType:
          type: string
          description: "idfc specific can be short term,  re-investment, quarterly\
            \ payout, monthly payout."
        image:
          type: string
        interestRate:
          type: number
        internalTransferFromEnabled:
          type: boolean
        internalTransferToEnabled:
          type: boolean
        isPrimaryMobile:
          type: boolean
        isAlternateMobileNumber:
          type: boolean
        isStatement:
          type: boolean
        lastDrawDate:
          type: string
        loanMaturityDate:
          type: string
        loanOriginationDate:
          type: string
        location:
          type: string
        lastUpdated:
          type: string
        maxTransactionLimit:
          type: string
        maturityDate:
          type: string
          description: its a date format
        minimumPaymentDue:
          type: string
        minimumBalance:
          type: string
        monthlyPayment:
          type: number
        openingBalance:
          type: number
        originalLoanAmount:
          type: number
        P2PLimit:
          type: number
        p2pEnabled:
          type: number
        paybillEnabled:
          type: boolean
        payoffAmount:
          type: number
        personalBankerName:
          type: string
        personalBankerContact:
          $ref: '#/components/schemas/getAccountData_personalBankerContact'
        phone:
          type: number
        postedBalance:
          type: number
        principalBalance:
          type: string
        productCode:
          type: string
        productName:
          type: string
        propertyAddress:
          type: string
        rewardPoints:
          type: string
        routingNumber:
          type: string
        statementDate:
          type: string
        status:
          type: string
        swiftCode:
          type: string
          description: IDFC specific
        totalBalance:
          type: number
        unbilledAmount:
          type: number
        valueAtMaturity:
          type: number
        holdAmount:
          type: number
        unclearFundsAmount:
          type: number
        averageMonthlyBalance:
          type: number
        netWithdrawableBalance:
          type: number
        totalTenure:
          type: string
        remainingTenure:
          type: string
        debitAccountNumber:
          type: string
        lateFee:
          type: number
        bounceCharge:
          type: number
        totalCharges:
          type: number
        overDueAmount:
          type: number
        cardDetails:
          type: array
          items:
            $ref: '#/components/schemas/getAccountData_accounts_cardDetails'
        IsCrossAccount:
          type: boolean
    GetCustomerData_personalBanker:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        mobileNumber:
          type: string
    GetTransactionsReq_transactionAmount:
      type: object
      properties:
        amount1:
          type: number
        amount:
          type: object
          properties: {}
        currency:
          type: string
      description: here amount can be a number or object based on user utterance with
        same key 'amount'
    GetTransactionsReq_category:
      type: object
      properties:
        codeType:
          type: string
          description: either MCC or TransactionCode
        value:
          type: array
          description: it is an array of arrays for MCC
          items:
            type: string
        source:
          type: string
          description: usually - Internal
    GetTransactionsRes_sub:
      type: object
      properties:
        customerId:
          type: number
        transactionId:
          type: number
        accountNumber:
          type: string
        timestamp:
          type: number
        amount:
          type: number
        currency:
          type: string
        debitOrCredit:
          type: string
        description:
          type: string
        paymentMode:
          type: string
        DBANames:
          type: string
        status:
          type: string
        closingBalance:
          type: number
        transacitonType:
          type: string
        ACHCode:
          type: string
        MCCCode:
          type: string
        SICCode:
          type: string
        name:
          type: string
        address:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        phoneNumber:
          type: number
        metaInfo:
          type: array
          items:
            $ref: '#/components/schemas/MetaInfo'
    disputeRequest_transactionsData:
      required:
      - reasonCode
      - transactionId
      type: object
      properties:
        transactionId:
          type: number
          example: 12345
        reasonCode:
          type: string
          description: "CHRG-AMNT-MORE - expectedAmount, CHRG-MULTPLE-TIME - duplicateTxnId,\
            \ CANCL-PURCH & CANCL-REC-CHRG - cancelledAt CANCl-RECV-GD-SERV - purchasedAt\
            \ & cancelledAt, INDESC-GD-SERV - customerDescription, UIDENTF-CHRG -\
            \ NA  codes requires the corresponding fields mapped to it"
          example: UIDENTF-CHRG
    transferScheduleListResponse_sub:
      type: object
      properties:
        Type:
          type: string
        CustomerId:
          type: number
        Amount:
          type: number
        SourceAccountNumber:
          type: string
        TargetAccountNumber:
          type: string
        DueDate:
          type: string
        InvoiceNumber:
          type: number
        Currency:
          type: string
        Status:
          type: string
        ScheduledDate:
          type: number
        NextScheduleDate:
          type: number
        id:
          type: string
    transferRecurringAddRequest_recurringOptions_frequency_duration:
      type: object
      properties:
        untilStop:
          type: string
        untilDate:
          type: number
        numberOfTransfers:
          type: number
    transferRecurringAddRequest_recurringOptions_frequency:
      type: object
      properties:
        iterate:
          type: string
        duration:
          $ref: '#/components/schemas/transferRecurringAddRequest_recurringOptions_frequency_duration'
    transferRecurringAddRequest_recurringOptions:
      type: object
      properties:
        amountType:
          type: string
        frequency:
          $ref: '#/components/schemas/transferRecurringAddRequest_recurringOptions_frequency'
    transferRecurringListResponse_sub_recurringOptions_frequency_duration:
      type: object
      properties:
        untilStop:
          type: string
        untilDate:
          type: string
        numberOfPayments:
          type: string
    transferRecurringListResponse_sub_recurringOptions_frequency:
      type: object
      properties:
        duration:
          $ref: '#/components/schemas/transferRecurringListResponse_sub_recurringOptions_frequency_duration'
        iterate:
          type: string
    transferRecurringListResponse_sub_recurringOptions:
      type: object
      properties:
        amountType:
          type: string
        frequency:
          $ref: '#/components/schemas/transferRecurringListResponse_sub_recurringOptions_frequency'
    transferRecurringListResponse_sub:
      type: object
      properties:
        Type:
          type: string
        CustomerId:
          type: number
        Amount:
          type: number
        SourceAccountNumber:
          type: string
        TargetAccountNumber:
          type: string
        DueDate:
          type: string
        Currency:
          type: string
        Status:
          type: string
        ScheduledDate:
          type: number
        recurringOptions:
          $ref: '#/components/schemas/transferRecurringListResponse_sub_recurringOptions'
        id:
          type: string
    transferRecurringUpdateRequest_recurringOptions_frequency:
      type: object
      properties:
        duration:
          $ref: '#/components/schemas/transferRecurringAddRequest_recurringOptions_frequency_duration'
        iterate:
          type: string
    transferRecurringUpdateRequest_recurringOptions:
      type: object
      properties:
        amountType:
          type: string
        frequency:
          $ref: '#/components/schemas/transferRecurringUpdateRequest_recurringOptions_frequency'
        updateTransferType:
          type: string
    CCListResponse_sub:
      type: object
      properties:
        Type:
          type: string
        CustomerId:
          type: number
        Amount:
          type: number
        SourceAccountNumber:
          type: string
        TargetAccountNumber:
          type: string
        DueDate:
          type: string
        Currency:
          type: string
        Status:
          type: string
        id:
          type: string
    depositRequest_image:
      type: object
      properties:
        frontImage:
          type: string
          example: https://google.com
        backImage:
          type: string
          example: https://google.com
    GetTransactionsReq_sort:
      type: object
      properties:
        type:
          type: string
          description: amount
        value:
          type: string
          description: gt or lt
    locateProfileRequest:
      required:
      - accountNumber
      - customerId
      - ssNumber
      - ssnShort
      type: object
      properties:
        customerId:
          type: string
        ssNumber:
          type: string
        ssnShort:
          type: string
        accountNumber:
          type: string
      description: "ssNumber, ssnShort, accountNumber are custom types. Either customerId\
        \ or ssNumber or ssnShort and accountNumber will be sent in the request."
    locateProfileResponse:
      type: object
      properties:
        accountNumber:
          type: string
        cardDetails:
          $ref: '#/components/schemas/locateProfileResponse_cardDetails'
        personalQuestions:
          $ref: '#/components/schemas/locateProfileResponse_personalQuestions'
        ssNumber:
          type: number
        ssnShort:
          type: number
        alternatePhoneNumber:
          type: number
        customerId:
          type: string
        email:
          type: string
        identificationNumber:
          type: string
        identificationType:
          type: string
        image:
          type: string
        isAlternateMobileNumber:
          type: boolean
        isPrimaryMobileNumber:
          type: boolean
        location:
          type: string
        name:
          type: string
        personalBanker:
          $ref: '#/components/schemas/GetCustomerData_personalBanker'
        phone:
          type: number
        securityQuestions:
          type: array
          items:
            type: string
        segmentId:
          type: number
        multiAccounts:
          type: array
          items:
            $ref: '#/components/schemas/locateProfileResponse_multiAccounts'
        warningCodes:
          type: array
          items:
            $ref: '#/components/schemas/locateProfileResponse_warningCodes'
      example:
        accountNumber: "1042345"
        alternatePhoneNumber: 8765454323
        cardDetails:
          cardNumber: "1234456778901690"
          expiryDate: 2025-01-01T00:00:00.000+0000
          cvv: "123"
          pin: "1111"
        customerId: 1045300
        email: John@gmail.com
        identificationNumber: 0
        identificationType: ""
        image: ""
        isAlternateMobileNumber: false
        isPrimaryMobileNumber: true
        location: "223 main street , Orlando, Florida, 33221"
        name: John
        personalBanker:
          name: William Smith
          email: William.Smith@bank.com
          mobileNumber: (904) 236-2345
        personalQuestions:
          DOB: 1999-05-05T00:00:00.000+0000
          SSN: 104531234
          SecretPassword: Sam
          LDAmount: 100
          AccNumber: "1042345"
        phone: 918806043830
        securityQuestions:
        - Q: What is the name of the Grade School that you attended?
          A: DJHS
        - Q: What is the name of your childhood best friend?
          A: Sam
        segmentId: 1
        ssNumber: 104531234
        ssnShort: 1234
        multiAccounts:
        - name: MICKEY O MOUSE
          location: 777 BAKER ST WHITE CLOUD MI 49349
          email: cboyle@gerberfcu.com
          phone: 7572225555
          accountNumber: "0001410987"
          alternatePhoneNumber: 2316295137
          customerId: "0001410987"
          identificationNumber: "555121244"
          identificationType: SSN
          personalQuestions:
            DOB: 1967-06-02
            SSN: 555121244
            AccNumber: "0001410987"
            LDAmount: 0
          ssnShort: 1244
          ssNumber: 555121244
          cardDetails:
            cardNumber: "5110081000147641"
            expiryDate: 2022-09-01
            pin: "0"
          warningCodes:
            code: 8
            description: ""
            level: profile
    debitcardInfobody:
      required:
      - customerId
      - cvv
      - debitCardNumber
      - expiryDate
      - pin
      type: object
      properties:
        debitCardNumber:
          type: string
          example: "1234456778901690"
        pin:
          type: string
          example: "1111"
        cvv:
          type: string
          example: "123"
        expiryDate:
          type: string
          example: 2025-01-01T00:00:00.000+0000
        customerId:
          type: number
          example: 1045300
    personalInfobody:
      required:
      - customerId
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
        dob:
          type: string
          example: 1999-05-05T00:00:00.000+0000
        ssn:
          type: number
          example: 104531234
        secrectPassword:
          type: string
          example: Sam
        AccNumber:
          type: string
          example: "1042345"
        lastDepositAmt:
          type: number
          example: 500
      description: any of these will be required. dob || ssn || secrectPassword ||
        AccNumber || lastDepositAmt
    locateProfileResponse_cardDetails:
      type: object
      properties:
        cardNumber:
          type: string
        expiryDate:
          type: string
        cvv:
          type: string
        pin:
          type: string
    locateProfileResponse_personalQuestions:
      type: object
      properties:
        DOB:
          type: string
        SSN:
          type: number
        SecretPassword:
          type: string
        LDAmount:
          type: number
        AccNumber:
          type: string
    accountDetailsRequest:
      required:
      - customerId
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
        accountInfo:
          type: array
          items:
            $ref: '#/components/schemas/accountDetailsRequest_accountInfo'
    getAccountResponse:
      type: array
      example:
      - customerId: 1045300
        nameOnAccount: John
        accountName: Savings Account
        accountNickname: Joint with Son
        accountNumber: "1042222"
        accountType: Savings Account
        status: active
        displayCardStatus: temporary lock
        displayAccountType: Savings Account
        currency: USD
        availableBalance: 5649.65
        currentBalance: 20
        minimumBalance: 1500
        statementDate: ""
        activatedDate: 01-01-2011
        deactivatedDate: ""
        lastUpdated: 01-07-2019
        image: ""
        dueDate: ""
        personalBankerName: William Smith
        personalBankerContact:
          email: William.Smith@bank.com
          mobileNumber: (904) 236-2345
        maxTransactionLimit: 400000
        userID: 19ff1cd63a1be8ff
        cardNetwork: Discover
        cardType: ""
        cardName: Wells Fargo
        P2PLimit: 450
        CardStatus: ""
        routingNumber: 122105155
        availableCashLimit: 1500
        loanOriginationDate: ""
        propertyAddress: ""
        lastDrawDate: ""
        productName: '"Basic Savings"'
        productCode: BS03
        loanMaturityDate: ""
        location: "1320 Park avenue, Orlando, Florida, 76656"
        email: testing11@gmail.com
        phone: 14085040880
        expDate: ""
        maturityDate: ""
        internalTransferFromEnabled: true
        internalTransferToEnabled: true
        p2pEnabled: true
        paybillEnabled: true
        swiftCode: ""
        branchName: ""
        bankName: ""
        fdType: ""
        totalTenure: ""
        paidTenure: ""
        remainingTenure: ""
        debitAccountNumber: ""
        lastEmiPaidOn: ""
        repaymentBankName: ""
        blockReason: ""
        freezeType: ""
        iban: ""
        holdingType: ""
        isStatement: false
        isPrimaryMobileNumber: false
        isAlternateMobileNumber: false
        hasMissedEMI: false
        chequeBookDetails:
          enabled: true
          allowed: 3
          preferred: 2
          numberOfLeaves: 10
        cardChannelInfo:
          ATM:
            enable: false
            limit: 20000
          offline:
            enable: true
            limit: 20000
          international:
            enable: false
            limit: 100000
          online:
            enable: false
            limit: 20000
          contactless:
            enable: true
            limit: 20000
        cardRestrictions:
          countries:
          - countrycode: IND
          mcc:
          - name: Lodging
            description: Lodging
            blocked: true
        cardDetails:
        - cardName: VISA Millenium Debit
          cardNumber: "1234456778904268"
          cardStatus: active
          cardImage: ""
          cardType: primary
          expDate: "0229"
          displayCardStatus: Temporary Lock
          primaryCard: "4268"
          cardChannelInfo:
            ATM:
              enable: false
              limit: 20000
            offline:
              enable: true
              limit: 20000
            international:
              enable: false
              limit: 100000
            online:
              enable: false
              limit: 20000
            contactless:
              enable: true
              limit: 20000
            cardRestrictions:
              countries:
              - countrycode: IND
              mcc:
              - name: Lodging
                description: Lodging
                blocked: true
          rewardPoints: 1000
          blockReason: lost
          nameOnCard: ""
          cardNetwork: ""
          autopay:
            enabled: true
            sourceAccountId: "12345678"
            paymentType: full
            onStatementDate: true
            dayOfMonth: "01"
          dueAmount: 245
          dueDate: 01-07-2023
          minimumPaymentDue: 100
          partialPaymentPaid: 659
      items:
        $ref: '#/components/schemas/getAccountData_accounts'
    LimitRequest:
      required:
      - customerId
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
    limitsResponse:
      type: array
      example:
      - accountName: Checking Account
        accountNickname: Joint
        accountNumber: "1042345"
        accountType: Checking Account
        balance: 1000
        cardName: Visa Platinum
        cardNumber: "1234567891690"
        currency: USD
        customerId: 1045300
        perTxn: 500
        availableCashLimit: 1000
        availableCredit: 5000
        creditLimit: 10000
        purchase:
          limits:
            monthly:
              available: 5000
              maximum: 8000
              spent: 3000
            daily:
              available: 500
              maximum: 800
              spent: 300
          transactions:
            monthly:
              available: 20
              maximum: 30
              usedup: 10
            daily:
              available: 5
              maximum: 8
              usedup: 3
        txnsPerDay:
          available: 5
          maximum: 8
          usedup: 3
          amount: 500
        withdrawal:
          limits:
            monthly:
              available: 5000
              maximum: 8000
              spent: 3000
            daily:
              available: 500
              maximum: 800
              spent: 300
          transactions:
            monthly:
              available: 20
              maximum: 30
              usedup: 10
            daily:
              available: 5
              maximum: 8
              usedup: 3
      items:
        $ref: '#/components/schemas/limitsResponse_inner'
    viewLimitRequest:
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
        accountNumber:
          type: array
          example:
          - "1042345"
          items:
            type: string
        cardNumber:
          type: array
          items:
            type: string
    viewlimitsResponse:
      type: array
      example:
      - customerId: 1045300
        currency: USD
        withdrawal:
          limits:
            monthly:
              available: 5000
              maximum: 8000
              spent: 3000
            daily:
              available: 500
              maximum: 800
              spent: 300
          transactions:
            monthly:
              available: 20
              maximum: 30
              usedup: 10
            daily:
              available: 5
              maximum: 8
              usedup: 3
        purchase:
          limits:
            monthly:
              available: 5000
              maximum: 8000
              spent: 3000
            daily:
              available: 500
              maximum: 800
              spent: 300
          transactions:
            monthly:
              available: 20
              maximum: 30
              usedup: 10
            daily:
              available: 5
              maximum: 8
              usedup: 3
        txnsPerDay:
          available: 5
          maximum: 8
          usedup: 3
          amount: 500
        perTxn: 500
      items:
        $ref: '#/components/schemas/viewlimitsResponse_inner'
    requestStatusResponse:
      type: array
      example:
      - accountName: Joint With Son
        accountNumber: "1043693"
        customerId: 1045300
        description: Duplicate
        estimation: "1"
        modifyDate: 1656044640526
        requestDate: 1651343400000
        requestId: 123455
        requestSubType: Account Closure
        serviceType: Service Request
        status: In Progress
      items:
        $ref: '#/components/schemas/requestStatusResponse_inner'
    existinguser:
      type: object
      properties:
        sourcePin:
          type: string
        targetPin:
          type: string
      example:
        sourcePin: 5aa5836c710427cfc7b48d3f58cd5779
        targetPin: 1357#
    profileInfoObj:
      type: object
      properties:
        customerId:
          type: string
        accountNumber:
          type: string
        ssn:
          type: string
    newuser:
      type: object
      properties:
        sourcePin:
          type: string
        targetPin:
          type: string
        profileInfo:
          $ref: '#/components/schemas/profileInfoObj'
      example:
        sourcePin: 1357#
        targetPin: 1357#
        profileInfo:
          customerId: 12345
          accountNumber: 1045301
          ssn: 123456
    newuserpinrules:
      type: object
      properties:
        sourcePin:
          type: string
      example:
        sourcePin: 1357#
    savepinreq:
      type: object
      properties:
        pin:
          type: string
          example: 2983yjhdhgdjhsd
        profileInfo:
          $ref: '#/components/schemas/savepinreq_profileInfo'
    request:
      type: object
      properties:
        accountName:
          type: string
        accountNumber:
          type: string
        customerId:
          type: number
        cardNumber:
          type: string
        description:
          type: string
        requestSubType:
          type: string
        requestType:
          type: string
        serviceType:
          type: string
        meta:
          type: object
          properties: {}
      example:
        accountName: Joint
        accountNumber: "1042345"
        customerId: 1045300
        cardNumber: "12345678901690"
        description: request for paper statement
        requestSubType: Stamped Paper Statement
        serviceType: Service Request
        requestType: Statement
        meta: {}
    profileEStatementRequest:
      required:
      - customerId
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
        email:
          type: string
          example: John@gmail.com
        secondaryEmail:
          type: string
          example: John1@gmail.com
        subscribe:
          type: boolean
          description: false for unsubscribe estatement
          example: true
        meta:
          type: object
          properties: {}
    chequeBookRequest:
      required:
      - accountNumber
      - customerId
      - numberOfChequeBooks
      type: object
      properties:
        customerId:
          type: number
        numberOfChequeBooks:
          type: number
        numberOfLeaves:
          type: number
          description: per cheque book
        accountNumber:
          type: string
      example:
        customerId: 1045300
        accountNumber: "1042345"
        numberOfChequeBooks: 2
        numberOfLeaves: 10
    emailRequest:
      required:
      - customerId
      type: object
      properties:
        customerId:
          type: number
          example: 1045300
        accountNumber:
          type: string
          example: "1045301"
        documentType:
          type: string
          example: statement
        meta:
          $ref: '#/components/schemas/emailRequest_meta'
    accountDetailsRequest_accountInfo:
      type: object
      properties:
        accountType:
          type: string
          example: Savings Account
        accountNumber:
          type: string
          example: "1042345"
        cardNumber:
          type: string
          example: "12345678901690"
    limitsResponse_inner:
      type: object
      properties:
        accountName:
          type: string
        accountNickname:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
        balance:
          type: string
        cardName:
          type: string
        cardNumber:
          type: string
        currency:
          type: string
        customerId:
          type: number
        perTxn:
          type: number
        status:
          type: string
        availableCashLimit:
          type: number
        creditLimit:
          type: number
        availableCredit:
          type: number
        purchase:
          $ref: '#/components/schemas/limitsResponse_inner_purchase'
        txnsPerDay:
          $ref: '#/components/schemas/limitsResponse_inner_txnsPerDay'
        withdrawal:
          $ref: '#/components/schemas/limitsResponse_inner_purchase'
    viewlimitsResponse_inner:
      type: object
      properties:
        currency:
          type: string
        customerId:
          type: number
        perTxn:
          type: number
        purchase:
          $ref: '#/components/schemas/limitsResponse_inner_purchase'
        txnsPerDay:
          $ref: '#/components/schemas/viewlimitsResponse_inner_txnsPerDay'
        withdrawal:
          $ref: '#/components/schemas/limitsResponse_inner_purchase'
    requestStatusResponse_inner:
      type: object
      properties:
        accountName:
          type: string
        accountNumber:
          type: string
        customerId:
          type: number
        description:
          type: string
        estimation:
          type: number
        modifyDate:
          type: number
        requestDate:
          type: number
        requestId:
          type: string
        requestSubType:
          type: string
        requestType:
          type: string
        status:
          type: string
    savepinreq_profileInfo:
      type: object
      properties:
        customerId:
          type: string
          example: "1045300"
        accountNumber:
          type: string
          example: "1042345"
        ssn:
          type: string
          example: "104523450"
    emailRequest_meta:
      type: object
      properties:
        fromDate:
          type: string
          example: "167627367676"
        toDate:
          type: string
          example: "167627367676"
        accountBranch:
          type: string
          example: B015
    limitsResponse_inner_purchase:
      type: object
      properties:
        limits:
          $ref: '#/components/schemas/limitsResponse_inner_purchase_limits'
        transactions:
          $ref: '#/components/schemas/limitsResponse_inner_purchase_transactions'
    limitsResponse_inner_txnsPerDay:
      type: object
      properties:
        available:
          type: number
        maximum:
          type: number
        usedup:
          type: number
        amountperday:
          type: number
    viewlimitsResponse_inner_txnsPerDay:
      type: object
      properties:
        available:
          type: number
        maximum:
          type: number
        usedup:
          type: number
        amount:
          type: number
    limitsResponse_inner_purchase_limits:
      type: object
      properties:
        monthly:
          $ref: '#/components/schemas/limitsResponse_inner_purchase_limits_monthly'
        daily:
          $ref: '#/components/schemas/limitsResponse_inner_purchase_limits_monthly'
    limitsResponse_inner_purchase_transactions:
      type: object
      properties:
        monthly:
          $ref: '#/components/schemas/limitsResponse_inner_purchase_transactions_monthly'
        daily:
          $ref: '#/components/schemas/limitsResponse_inner_purchase_transactions_monthly'
    limitsResponse_inner_purchase_limits_monthly:
      type: object
      properties:
        available:
          type: number
        maximum:
          type: number
        spent:
          type: number
    limitsResponse_inner_purchase_transactions_monthly:
      type: object
      properties:
        available:
          type: number
        maximum:
          type: number
        usedup:
          type: number
    GetAuthTokenResponse:
      type: object
      properties:
        token:
          type: string
      example:
        token: token
    submitRequest:
      type: object
    getAccountData_accounts_cardChannelInfo_ATM:
      type: object
      properties:
        enable:
          type: boolean
        limit:
          type: number
    getAccountData_accounts_cardChannelInfo:
      type: object
      properties:
        ATM:
          $ref: '#/components/schemas/getAccountData_accounts_cardChannelInfo_ATM'
        offline:
          $ref: '#/components/schemas/getAccountData_accounts_cardChannelInfo_ATM'
        international:
          $ref: '#/components/schemas/getAccountData_accounts_cardChannelInfo_ATM'
        online:
          $ref: '#/components/schemas/getAccountData_accounts_cardChannelInfo_ATM'
        contactless:
          $ref: '#/components/schemas/getAccountData_accounts_cardChannelInfo_ATM'
    getAccountData_accounts_cardRestrictions_countries:
      type: object
      properties:
        countrycode:
          type: string
    getAccountData_accounts_cardRestrictions_MCC:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    getAccountData_accounts_cardRestrictions:
      type: object
      properties:
        countries:
          type: array
          items:
            $ref: '#/components/schemas/getAccountData_accounts_cardRestrictions_countries'
        MCC:
          type: array
          items:
            $ref: '#/components/schemas/getAccountData_accounts_cardRestrictions_MCC'
    getAccountData_accounts_autopay:
      type: object
      properties:
        enabled:
          type: boolean
        sourceAccountId:
          type: string
        paymentType:
          type: string
        onStatementDate:
          type: boolean
        dayOfMonth:
          type: string
    getAccountData_accounts_cardDetails:
      type: object
      properties:
        cardName:
          type: string
        cardNumber:
          type: string
        cardStatus:
          type: string
        cardImage:
          type: string
        cardType:
          type: string
        expDate:
          type: string
        displayCardStatus:
          type: string
        primaryCard:
          type: string
        cardChannelInfo:
          $ref: '#/components/schemas/getAccountData_accounts_cardChannelInfo'
        cardRestrictions:
          $ref: '#/components/schemas/getAccountData_accounts_cardRestrictions'
        blockReason:
          type: string
        nameOnCard:
          type: string
        cardNetwork:
          type: string
        autopay:
          $ref: '#/components/schemas/getAccountData_accounts_autopay'
        dueAmount:
          type: number
        dueDate:
          type: string
        minimumPaymentDue:
          type: number
        partialPaymentPaid:
          type: number
    locateProfileResponse_multiAccounts:
      type: object
      properties:
        accountNumber:
          type: string
        cardDetails:
          $ref: '#/components/schemas/locateProfileResponse_cardDetails'
        personalQuestions:
          $ref: '#/components/schemas/locateProfileResponse_personalQuestions'
        ssNumber:
          type: number
        ssnShort:
          type: number
        alternatePhoneNumber:
          type: number
        customerId:
          type: string
        email:
          type: string
        identificationNumber:
          type: string
        identificationType:
          type: string
        location:
          type: string
        name:
          type: string
        phone:
          type: number
    locateProfileResponse_warningCodes:
      type: object
      properties:
        code:
          type: number
        level:
          type: string
        description:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_bearerAuth
