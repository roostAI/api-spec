# ********RoostGPT********

# Test generated by RoostGPT for test Exi-PW-Karate-VertexAi using AI Type Vertex AI and AI Model claude-3-7-sonnet
# 
# Feature file generated for /nobelPrize/{category}/{year}_get for http method type GET 
# RoostTestHash=9818bf6b39
# 
# 

# ********RoostGPT********
Feature: Nobel Prize API - Get Nobel Prize by Category and Year

  Background:
    * def baseURL = karate.properties['NOBEL_PRIZE_MASTER_DATA_BASE_URL'] || karate.properties['API_HOST']
    * url baseURL
    * configure report = true
    * header Accept = 'application/json'

  Scenario Outline: Get Nobel Prize information for a specific category and year - Success
    Given path '/2.1/nobelPrize/<category>/<year>'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.nobelPrize == '#object'
    And match response.nobelPrize.awardYear == '#number'
    And match response.nobelPrize.category == '#object'
    And match response.nobelPrize.category.en == '#string'
    And match response.nobelPrize.category.se == '#string'
    And match response.nobelPrize.category.false == '##string'
    And match response.nobelPrize.categoryFullName == '#object'
    And match response.nobelPrize.categoryFullName.en == '#string'
    And match response.nobelPrize.categoryFullName.se == '#string'
    And match response.nobelPrize.categoryFullName.false == '##string'
    And match response.nobelPrize.dateAwarded == '##string'
    And match response.nobelPrize.prizeAmount == '#number'
    And match response.nobelPrize.prizeAmountAdjusted == '#number'
    And match response.nobelPrize.topMotivation == '##object'
    And match response.nobelPrize.topMotivation.en == '##string'
    And match response.nobelPrize.topMotivation.se == '##string'
    And match response.nobelPrize.topMotivation.false == '##string'
    And match response.nobelPrize.laureates == '##array'
    
    # Validate laureates array if it exists
    * if (response.nobelPrize.laureates && response.nobelPrize.laureates.length > 0) karate.forEach(response.nobelPrize.laureates, function(laureate) {
      * match laureate.id == '#number'
      * match laureate.id >= 1
      * match laureate.name == '#object'
      * match laureate.name.en == '##string'
      * match laureate.name.se == '##string'
      * match laureate.name.false == '##string'
      * match laureate.portion == '##string'
      * match laureate.sortOrder == '##string'
      * match laureate.motivation == '##object'
      * match laureate.motivation.en == '##string'
      * match laureate.motivation.se == '##string'
      * match laureate.motivation.false == '##string'
      * match laureate.links == '##array'
      
      # Validate links array if it exists
      * if (laureate.links && laureate.links.length > 0) karate.forEach(laureate.links, function(link) {
        * match link.rel == '##string'
        * match link.href == '##string'
        * match link.action == '##string'
        * match link.types == '##string'
      })
    })

    Examples:
      | category  | year |
      | 'physics' | 2020 |
      | 'peace'   | 2019 |
      | 'medicine'| 2018 |
      | 'chemistry'| 2017 |
      | 'literature'| 2016 |
      | 'economics'| 2015 |

  Scenario Outline: Get Nobel Prize information with invalid category or year - Not Found
    Given path '/2.1/nobelPrize/<category>/<year>'
    When method GET
    Then status 404
    And match response == '#object'
    And match response.code == '#string'
    And match response.message == '#string'

    Examples:
      | category      | year |
      | 'nonexistent' | 2020 |
      | 'physics'     | 1800 |

  Scenario Outline: Get Nobel Prize information with invalid request format - Bad Request
    Given path '/2.1/nobelPrize/<category>/<year>'
    When method GET
    Then status 400
    And match response == '#object'
    And match response.code == '#string'
    And match response.message == '#string'

    Examples:
      | category  | year    |
      | 'physics' | 'abcde' |
      | 123       | 2020    |

  Scenario Outline: Get Nobel Prize information with valid but unprocessable request - Unprocessable Entity
    Given path '/2.1/nobelPrize/<category>/<year>'
    When method GET
    Then status 422
    And match response == '#object'
    And match response.code == '#string'
    And match response.message == '#string'

    Examples:
      | category  | year |
      | 'physics' | 3000 |
      | 'peace'   | 1900 |
