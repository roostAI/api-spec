# ********RoostGPT********

# Test generated by RoostGPT for test Exi-PW-Karate-VertexAi using AI Type Vertex AI and AI Model claude-3-7-sonnet
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=977dd819cb
# 
# 

# ********RoostGPT********
Feature: Nobel Prizes API

  Background:
    * def baseURL = karate.properties['NOBEL_PRIZE_MASTER_DATA_BASE_URL'] || karate.properties['API_HOST']
    * url baseURL
    * configure report = true
    * header Accept = 'application/json'

  Scenario: Get all Nobel Prizes with default parameters
    Given path '/2.1/nobelPrizes'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.nobelPrizes == '#array'
    And match response.meta == '#object'
    And match response.links == '#array'
    And match each response.nobelPrizes[*].awardYear == '#number'
    And match each response.nobelPrizes[*].category == '#object'
    And match each response.nobelPrizes[*].category.en == '##string'
    And match each response.nobelPrizes[*].category.se == '##string'
    And match each response.nobelPrizes[*].categoryFullName == '##object'
    And match each response.nobelPrizes[*].dateAwarded == '##string'
    And match each response.nobelPrizes[*].prizeAmount == '##number'
    And match each response.nobelPrizes[*].prizeAmountAdjusted == '##number'
    And match each response.nobelPrizes[*].topMotivation == '##object'
    And match each response.nobelPrizes[*].laureates == '##array'
    And match each response.nobelPrizes[*].laureates[*].id == '##number'
    And match each response.nobelPrizes[*].laureates[*].name == '##object'
    And match each response.nobelPrizes[*].laureates[*].portion == '##string'
    And match each response.nobelPrizes[*].laureates[*].sortOrder == '##string'
    And match each response.nobelPrizes[*].laureates[*].motivation == '##object'
    And match each response.nobelPrizes[*].laureates[*].links == '##array'
    And match response.meta.offset == '##number'
    And match response.meta.limit == '##number'
    And match response.meta.count == '#number'

  Scenario Outline: Get Nobel Prizes with pagination parameters
    Given path '/2.1/nobelPrizes'
    And param offset = <offset>
    And param limit = <limit>
    When method GET
    Then status 200
    And match response == '#object'
    And match response.nobelPrizes == '#array'
    And match response.meta == '#object'
    And match response.meta.offset == <offset>
    And match response.meta.limit == <limit>
    And match response.meta.count == '#number'
    And assert response.nobelPrizes.length <= <limit>

    Examples:
      | read('nobelPrizes_get.csv') |

  Scenario Outline: Get Nobel Prizes by year
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = <nobelPrizeYear>
    When method GET
    Then status 200
    And match response == '#object'
    And match response.nobelPrizes == '#array'
    And match response.meta == '#object'
    And match response.meta.nobelPrizeYear == <nobelPrizeYear>
    And match each response.nobelPrizes[*].awardYear == <nobelPrizeYear>

    Examples:
      | read('nobelPrizes_get.csv') |

  Scenario Outline: Get Nobel Prizes by year range
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = <nobelPrizeYear>
    And param yearTo = <yearTo>
    When method GET
    Then status 200
    And match response == '#object'
    And match response.nobelPrizes == '#array'
    And match response.meta == '#object'
    And match response.meta.nobelPrizeYear == <nobelPrizeYear>
    And match response.meta.yearTo == <yearTo>
    And match each response.nobelPrizes[*].awardYear == '#? _ >= nobelPrizeYear && _ <= yearTo'

    Examples:
      | read('nobelPrizes_get.csv') |

  Scenario Outline: Get Nobel Prizes by category
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeCategory = '<nobelPrizeCategory>'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.nobelPrizes == '#array'
    And match response.meta == '#object'
    And match response.meta.nobelPrizeCategory == '<nobelPrizeCategory>'
    And match each response.nobelPrizes[*].category.en contains '<categoryCheck>'

    Examples:
      | read('nobelPrizes_get.csv') |

  Scenario Outline: Get Nobel Prizes with sorting
    Given path '/2.1/nobelPrizes'
    And param sort = '<sort>'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.nobelPrizes == '#array'

    Examples:
      | read('nobelPrizes_get.csv') |

  Scenario Outline: Get Nobel Prizes with combined parameters
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = <nobelPrizeYear>
    And param nobelPrizeCategory = '<nobelPrizeCategory>'
    And param limit = <limit>
    When method GET
    Then status 200
    And match response == '#object'
    And match response.nobelPrizes == '#array'
    And match response.meta == '#object'
    And match response.meta.nobelPrizeYear == <nobelPrizeYear>
    And match response.meta.nobelPrizeCategory == '<nobelPrizeCategory>'
    And match response.meta.limit == <limit>
    And match each response.nobelPrizes[*].awardYear == <nobelPrizeYear>
    And assert response.nobelPrizes.length <= <limit>

    Examples:
      | read('nobelPrizes_get.csv') |

  Scenario: Invalid year parameter should return error
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = 1800
    When method GET
    Then status 400
    And match response == '#object'
    And match response.code == '#string'
    And match response.message == '#string'

  Scenario: Invalid category parameter should return error
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeCategory = 'invalid'
    When method GET
    Then status 404
    And match response == '#object'
    And match response.code == '#string'
    And match response.message == '#string'

  Scenario: Detailed validation of Nobel Prize response structure
    Given path '/2.1/nobelPrizes'
    And param limit = 1
    When method GET
    Then status 200
    And match response == '#object'
    And match response.nobelPrizes == '#array'
    And match response.nobelPrizes[0].awardYear == '#number'
    And match response.nobelPrizes[0].category == '#object'
    And match response.nobelPrizes[0].category.en == '#string'
    And match response.nobelPrizes[0].category.se == '##string'
    And match response.nobelPrizes[0].categoryFullName == '##object'
