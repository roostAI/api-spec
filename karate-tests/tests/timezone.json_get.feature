# ********RoostGPT********

# Test generated by RoostGPT for test weather_api_test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /timezone.json_get for http method type GET 
# RoostTestHash=df6b1e5ce9
# 
# 

# ********RoostGPT********
Feature: Time Zone API Tests

  Background:
    * def baseURL = karate.properties['WEATHER_API_BASE_URL'] || karate.properties['API_HOST']
    * url baseURL
    * def authToken = karate.properties['AUTH_TOKEN'] || karate.properties['key']
    * header Accept = 'application/json'

  Scenario Outline: Validate successful response for valid query
    Given path 'v1/timezone.json'
    And param q = '<query>'
    And param key = authToken
    When method GET
    Then status 200
    And match response == '#object'
    And match response.name == '#string'
    And match response.region == '#string'
    And match response.country == '#string'
    And match response.lat == '#number'
    And match response.lon == '#number'
    And match response.tz_id == '#string'
    And match response.localtime_epoch == '#number'
    And match response.localtime == '#string'

    Examples:
      | query        |
      | 'New York'   |
      | '90210'      |
      | '51.5074,-0.1278' |

  Scenario: Validate error response when 'q' parameter is missing
    Given path 'v1/timezone.json'
    And param key = authToken
    When method GET
    Then status 400
    And match response == '#object'
    And match response.code == 1003
    And match response.message == '#string'

  Scenario: Validate error response for invalid API key
    Given path 'v1/timezone.json'
    And param q = 'New York'
    And param key = 'invalid_key'
    When method GET
    Then status 401
    And match response == '#object'
    And match response.code == 1002
    And match response.message == '#string'

  Scenario: Validate error response for exceeded API key quota
    Given path 'v1/timezone.json'
    And param q = 'New York'
    And param key = authToken
    When method GET
    Then status 403
    And match response == '#object'
    And match response.code == 2007
    And match response.message == '#string'
