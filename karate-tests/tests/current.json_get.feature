# ********RoostGPT********

# Test generated by RoostGPT for test weather_api_test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /current.json_get for http method type GET 
# RoostTestHash=4bfd44e81d
# 
# 

# ********RoostGPT********
Feature: Realtime Weather API

  Background:
    * def baseURL = karate.properties['WEATHER_API_BASE_URL'] || karate.properties['API_HOST']
    * url baseURL
    * def authToken = karate.properties['AUTH_TOKEN'] || karate.properties['key']
    * header Accept = 'application/json'

  Scenario Outline: Get current weather with valid parameters
    Given path '/v1/current.json'
    And param key = authToken
    And param q = '<location>'
    And param lang = '<language>'
    When method GET
    Then status 200
    And match response.location.name == '#string'
    And match response.location.region == '#string'
    And match response.location.country == '#string'
    And match response.location.lat == '#number'
    And match response.location.lon == '#number'
    And match response.location.tz_id == '#string'
    And match response.location.localtime_epoch == '#number'
    And match response.location.localtime == '#string'
    And match response.current.last_updated_epoch == '#number'
    And match response.current.last_updated == '#string'
    And match response.current.temp_c == '#number'
    And match response.current.temp_f == '#number'
    And match response.current.is_day == '#number'
    And match response.current.condition.text == '#string'
    And match response.current.condition.icon == '#string'
    And match response.current.condition.code == '#number'
    And match response.current.wind_mph == '#number'
    And match response.current.wind_kph == '#number'
    And match response.current.wind_degree == '#number'
    And match response.current.wind_dir == '#string'
    And match response.current.pressure_mb == '#number'
    And match response.current.pressure_in == '#number'
    And match response.current.precip_mm == '#number'
    And match response.current.precip_in == '#number'
    And match response.current.humidity == '#number'
    And match response.current.cloud == '#number'
    And match response.current.feelslike_c == '#number'
    And match response.current.feelslike_f == '#number'
    And match response.current.vis_km == '#number'
    And match response.current.vis_miles == '#number'
    And match response.current.uv == '#number'
    And match response.current.gust_mph == '#number'
    And match response.current.gust_kph == '#number'
    And match response.current.air_quality.co == '#number'
    And match response.current.air_quality.no2 == '#number'
    And match response.current.air_quality.o3 == '#number'
    And match response.current.air_quality.so2 == '#number'
    And match response.current.air_quality.pm2_5 == '#number'
    And match response.current.air_quality.pm10 == '#number'
    And match response.current.air_quality['us-epa-index'] == '#number'
    And match response.current.air_quality['gb-defra-index'] == '#number'

    Examples:
      | location     | language |
      | 'New York'   | 'en'     |
      | 'London'     | 'fr'     |
      | 'Toronto'    | 'es'     |

  Scenario: Get current weather without 'q' parameter
    Given path '/v1/current.json'
    And param key = authToken
    When method GET
    Then status 400
    And match response.code == 1003
    And match response.message == '#string'

  Scenario: Get current weather with invalid API key
    Given path '/v1/current.json'
    And param key = 'invalid_key'
    And param q = 'New York'
    When method GET
    Then status 401
    And match response.code == 1002
    And match response.message == '#string'

  Scenario: Get current weather with exceeded API key quota
    Given path '/v1/current.json'
    And param key = authToken
    And param q = 'New York'
    When method GET
    Then status 403
    And match response.code == 2007
    And match response.message == '#string'
