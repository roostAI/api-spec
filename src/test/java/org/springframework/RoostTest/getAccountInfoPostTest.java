// ********RoostGPT********
/*
Test generated by RoostGPT for test pw-test-1746162948830 using AI Type Open AI and AI Model gpt-4

Test generated for /GetAccountInfo_post for http method type POST in rest-assured framework

RoostTestHash=8ad7051e66


*/

// ********RoostGPT********
package org.springframework.RoostTest;
import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import org.hamcrest.MatcherAssert;
import static org.hamcrest.Matchers.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.json.JSONObject;
import org.json.XML;
import org.json.JSONException;
import org.json.JSONArray;
import java.util.Arrays;

public class getAccountInfoPostTest {

    List<Map<String, String>> envList = new ArrayList<>();


    @BeforeEach
    public void setUp() {
      TestdataLoader dataloader = new TestdataLoader();
      String[] envVarsList = {""};
      envList = dataloader.load("src/test/java/org/springframework/RoostTest/GetAccountInfoPostTest.csv", envVarsList);
    }

  
    @Test  
    public void getAccountInfoPost_Test() throws JSONException {
        this.setUp();
        Integer testNumber = 1;
        for (Map<String, String> testData : envList) {
          RestAssured.baseURI = (testData.get("BASE_URL") != null && !testData.get("BASE_URL").isEmpty()) ? testData.get("BASE_URL"): "https://localhost:8080/smt";  
          JSONObject requestBodyObject = new JSONObject();
          if(testData.get("RequestBody") != null){
              requestBodyObject = new JSONObject(testData.get("RequestBody"));
          }
                Response responseObj = given()
				.header("koreUserId", testData.get("koreUserId") != null ? testData.get("koreUserId") : "")
				.header("botId", testData.get("botId") != null ? testData.get("botId") : "")
				.header("accountId", testData.get("accountId") != null ? testData.get("accountId") : "")
				.header("Authorization", testData.get("Authorization") != null ? testData.get("Authorization") : "")
				.header("X_Auth_token", testData.get("X_Auth_token") != null ? testData.get("X_Auth_token") : "")
				.header("X_CORRELATION_ID", testData.get("X_CORRELATION_ID") != null ? testData.get("X_CORRELATION_ID") : "")
				.contentType(ContentType.JSON)
				.body(requestBodyObject.toString())
                .when()
                .post("/GetAccountInfo")  
                .then() 
                .extract().response(); 
              JsonPath response;
              String contentType = responseObj.getContentType();

              System.out.printf("Test Case %d: getAccountInfoPost_Test \n", testNumber++);
              System.out.println("Request: POST /GetAccountInfo");
              System.out.println("Status Code: " + responseObj.statusCode());
              if (testData.get("statusCode") != null) {
                String statusCodeFromCSV = testData.get("statusCode");
                if (statusCodeFromCSV.contains("X")) {
                  MatcherAssert.assertThat(
                      "Expected a status code of category " + statusCodeFromCSV + ", but got "
                          + Integer.toString(responseObj.statusCode()) + " instead",
                      Integer.toString(responseObj.statusCode()).charAt(0), equalTo(statusCodeFromCSV.charAt(0)));
                } else {
                  MatcherAssert.assertThat(
                      Integer.toString(responseObj.statusCode()), equalTo(statusCodeFromCSV));
                }
              } 
              				else {  
      List<Integer> expectedStatusCodes = Arrays.asList(200,401,404);
				MatcherAssert.assertThat(responseObj.statusCode(), is(in(expectedStatusCodes)));
          }
				String stringifiedStatusCode = Integer.toString(responseObj.statusCode());
        switch(responseObj.statusCode()){
        
          case 200:
            stringifiedStatusCode = "200";
            MatcherAssert.assertThat(contentType, equalTo("application/json"));
            break;
         
          case 401:
            stringifiedStatusCode = "401";
            MatcherAssert.assertThat(contentType, equalTo("application/json"));
            break;
         
          case 404:
            stringifiedStatusCode = "404";
            MatcherAssert.assertThat(contentType, equalTo("application/json"));
            break;
         
    }

      switch(Integer.toString(responseObj.statusCode()).charAt(0)){
      
    }

      
              if (contentType.contains("application/xml") || contentType.contains("text/xml")) {
                String xmlResponse = responseObj.asString();
                JSONObject jsonResponse = XML.toJSONObject(xmlResponse);
                JSONObject jsonData = jsonResponse.getJSONObject("xml");
                String jsonString = jsonData.toString();
                response = new JsonPath(jsonString);
        
              } else if(contentType.contains("application/json")){  
                response = responseObj.jsonPath(); 
              } else {
                System.out.println("Response content type found: "+contentType+", but RoostGPT currently only supports the following response content types: application/json,text/xml,application/xml");
                continue;
              }
         
                if(stringifiedStatusCode.equals("200")){					System.out.println("Description: successful operation");
      
              if (response.get("customerId") != null) {
                  
                MatcherAssert.assertThat(response.get("customerId"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts") != null) {
                        
                  for (int i = 0; i < response.getList("accounts").size(); i++) {      
              if (response.get("accounts["+ i +"].customerId") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].customerId"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].accountName") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].accountName"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].accountNickname") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].accountNickname"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].accountNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].accountNumber"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].accountType") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].accountType"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].activatedDate") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].activatedDate"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].availableBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].availableBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].availableCash") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].availableCash"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].availableCashLimit") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].availableCashLimit"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].availableCredit") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].availableCredit"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].bankName") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].bankName"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].branchName") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].branchName"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardName") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardName"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardNumber"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardStatus") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardStatus"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardType") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardType"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].creditLimit") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].creditLimit"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].currency") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].currency"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].currentBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].currentBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].deactivatedDate") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].deactivatedDate"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].dueAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].dueAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].dueDate") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].dueDate"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].earlyWithdrawalPenalty") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].earlyWithdrawalPenalty"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].email") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].email"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].expDate") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].expDate"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].fdType") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].fdType"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].image") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].image"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].interestRate") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].interestRate"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].internalTransferFromEnabled") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].internalTransferFromEnabled"), instanceOf(Boolean.class));
              }
      
              if (response.get("accounts["+ i +"].internalTransferToEnabled") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].internalTransferToEnabled"), instanceOf(Boolean.class));
              }
      
              if (response.get("accounts["+ i +"].isPrimaryMobile") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].isPrimaryMobile"), instanceOf(Boolean.class));
              }
      
              if (response.get("accounts["+ i +"].isAlternateMobileNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].isAlternateMobileNumber"), instanceOf(Boolean.class));
              }
      
              if (response.get("accounts["+ i +"].isStatement") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].isStatement"), instanceOf(Boolean.class));
              }
      
              if (response.get("accounts["+ i +"].lastDrawDate") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].lastDrawDate"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].loanMaturityDate") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].loanMaturityDate"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].loanOriginationDate") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].loanOriginationDate"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].location") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].location"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].lastUpdated") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].lastUpdated"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].maxTransactionLimit") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].maxTransactionLimit"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].maturityDate") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].maturityDate"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].minimumPaymentDue") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].minimumPaymentDue"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].minimumBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].minimumBalance"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].monthlyPayment") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].monthlyPayment"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].openingBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].openingBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].originalLoanAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].originalLoanAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].P2PLimit") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].P2PLimit"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].p2pEnabled") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].p2pEnabled"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].paybillEnabled") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].paybillEnabled"), instanceOf(Boolean.class));
              }
      
              if (response.get("accounts["+ i +"].payoffAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].payoffAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].personalBankerName") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].personalBankerName"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].personalBankerContact") != null) {
                      
              if (response.get("accounts["+ i +"].personalBankerContact.email") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].personalBankerContact.email"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].personalBankerContact.mobileNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].personalBankerContact.mobileNumber"), instanceOf(String.class));
              }

              }
      
              if (response.get("accounts["+ i +"].phone") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].phone"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].postedBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].postedBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].principalBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].principalBalance"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].productCode") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].productCode"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].productName") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].productName"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].propertyAddress") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].propertyAddress"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].rewardPoints") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].rewardPoints"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].routingNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].routingNumber"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].statementDate") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].statementDate"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].status") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].status"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].swiftCode") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].swiftCode"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].totalBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].totalBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].unbilledAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].unbilledAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].valueAtMaturity") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].valueAtMaturity"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].holdAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].holdAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].unclearFundsAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].unclearFundsAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].averageMonthlyBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].averageMonthlyBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].netWithdrawableBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].netWithdrawableBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].totalTenure") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].totalTenure"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].remainingTenure") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].remainingTenure"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].debitAccountNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].debitAccountNumber"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].lateFee") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].lateFee"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].bounceCharge") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].bounceCharge"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].totalCharges") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].totalCharges"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].overDueAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].overDueAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails") != null) {
                        
                  for (int i1 = 0; i1 < response.getList("accounts["+ i +"].cardDetails").size(); i1++) {      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].cardName") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].cardName"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].cardNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].cardNumber"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].cardStatus") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].cardStatus"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].cardImage") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].cardImage"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].cardType") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].cardType"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].expDate") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].expDate"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].displayCardStatus") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].displayCardStatus"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].primaryCard") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].primaryCard"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].blockReason") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].blockReason"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].nameOnCard") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].nameOnCard"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].cardNetwork") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].cardNetwork"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].dueAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].dueAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].dueDate") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].dueDate"), instanceOf(String.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].minimumPaymentDue") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].minimumPaymentDue"), instanceOf(Integer.class));
              }
      
              if (response.get("accounts["+ i +"].cardDetails["+ i1 +"].partialPaymentPaid") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].cardDetails["+ i1 +"].partialPaymentPaid"), instanceOf(Integer.class));
              }
        
                    }    
                MatcherAssert.assertThat(response.getList("accounts["+ i +"].cardDetails"), instanceOf(List.class));

              }
      
              if (response.get("accounts["+ i +"].IsCrossAccount") != null) {
                  
                MatcherAssert.assertThat(response.get("accounts["+ i +"].IsCrossAccount"), instanceOf(Boolean.class));
              }
        
                    }    
                MatcherAssert.assertThat(response.getList("accounts"), instanceOf(List.class));

              }
				}
if(stringifiedStatusCode.equals("401")){					System.out.println("Description: Error: Authorisation failed.");
      
              if (response.get("err") != null) {
                      
              if (response.get("err.message") != null) {
                  
                MatcherAssert.assertThat(response.get("err.message"), instanceOf(String.class));
              }

              }
				}
if(stringifiedStatusCode.equals("404")){					System.out.println("Description: Error: Not Found");
      
              if (response.get("err") != null) {
                      
              if (response.get("err.message") != null) {
                  
                MatcherAssert.assertThat(response.get("err.message"), instanceOf(String.class));
              }

              }
				}


            }  
    }
}
