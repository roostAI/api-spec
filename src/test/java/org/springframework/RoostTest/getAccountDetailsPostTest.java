// ********RoostGPT********
/*
Test generated by RoostGPT for test pw-test-1746603524431 using AI Type Open AI and AI Model gpt-4

Test generated for /GetAccountDetails_post for http method type POST in rest-assured framework

RoostTestHash=365f4bca46


*/

// ********RoostGPT********
package org.springframework.RoostTest;
import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import org.hamcrest.MatcherAssert;
import static org.hamcrest.Matchers.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.json.JSONObject;
import org.json.XML;
import org.json.JSONException;
import org.json.JSONArray;
import java.util.Arrays;

public class getAccountDetailsPostTest {

    List<Map<String, String>> envList = new ArrayList<>();


    @BeforeEach
    public void setUp() {
      TestdataLoader dataloader = new TestdataLoader();
      String[] envVarsList = {""};
      envList = dataloader.load("src/test/java/org/springframework/RoostTest/GetAccountDetailsPostTest.csv", envVarsList);
    }

  
    @Test  
    public void getAccountDetailsPost_Test() throws JSONException {
        this.setUp();
        Integer testNumber = 1;
        for (Map<String, String> testData : envList) {
          RestAssured.baseURI = (testData.get("BASE_URL") != null && !testData.get("BASE_URL").isEmpty()) ? testData.get("BASE_URL"): "https://localhost:8080/smt";  
          JSONObject requestBodyObject = new JSONObject();
          if(testData.get("RequestBody") != null){
              requestBodyObject = new JSONObject(testData.get("RequestBody"));
          }
                Response responseObj = given()
				.header("koreUserId", testData.get("koreUserId") != null ? testData.get("koreUserId") : "")
				.header("botId", testData.get("botId") != null ? testData.get("botId") : "")
				.header("accountId", testData.get("accountId") != null ? testData.get("accountId") : "")
				.header("Authorization", testData.get("Authorization") != null ? testData.get("Authorization") : "")
				.header("X_Auth_token", testData.get("X_Auth_token") != null ? testData.get("X_Auth_token") : "")
				.header("X_CORRELATION_ID", testData.get("X_CORRELATION_ID") != null ? testData.get("X_CORRELATION_ID") : "")
				.contentType(ContentType.JSON)
				.body(requestBodyObject.toString())
                .when()
                .post("/GetAccountDetails")  
                .then() 
                .extract().response(); 
              JsonPath response;
              String contentType = responseObj.getContentType();

              System.out.printf("Test Case %d: getAccountDetailsPost_Test \n", testNumber++);
              System.out.println("Request: POST /GetAccountDetails");
              System.out.println("Status Code: " + responseObj.statusCode());
              if (testData.get("statusCode") != null) {
                String statusCodeFromCSV = testData.get("statusCode");
                if (statusCodeFromCSV.contains("X")) {
                  MatcherAssert.assertThat(
                      "Expected a status code of category " + statusCodeFromCSV + ", but got "
                          + Integer.toString(responseObj.statusCode()) + " instead",
                      Integer.toString(responseObj.statusCode()).charAt(0), equalTo(statusCodeFromCSV.charAt(0)));
                } else {
                  MatcherAssert.assertThat(
                      Integer.toString(responseObj.statusCode()), equalTo(statusCodeFromCSV));
                }
              } 
              				else {  
      List<Integer> expectedStatusCodes = Arrays.asList(200,401,404);
				MatcherAssert.assertThat(responseObj.statusCode(), is(in(expectedStatusCodes)));
          }
				String stringifiedStatusCode = Integer.toString(responseObj.statusCode());
        switch(responseObj.statusCode()){
        
          case 200:
            stringifiedStatusCode = "200";
            MatcherAssert.assertThat(contentType, equalTo("application/json"));
            break;
         
          case 401:
            stringifiedStatusCode = "401";
            MatcherAssert.assertThat(contentType, equalTo("application/json"));
            break;
         
          case 404:
            stringifiedStatusCode = "404";
            MatcherAssert.assertThat(contentType, equalTo("application/json"));
            break;
         
    }

      switch(Integer.toString(responseObj.statusCode()).charAt(0)){
      
    }

      
              if (contentType.contains("application/xml") || contentType.contains("text/xml")) {
                String xmlResponse = responseObj.asString();
                JSONObject jsonResponse = XML.toJSONObject(xmlResponse);
                JSONObject jsonData = jsonResponse.getJSONObject("xml");
                String jsonString = jsonData.toString();
                response = new JsonPath(jsonString);
        
              } else if(contentType.contains("application/json")){  
                response = responseObj.jsonPath(); 
              } else {
                System.out.println("Response content type found: "+contentType+", but RoostGPT currently only supports the following response content types: application/json,text/xml,application/xml");
                continue;
              }
         
                if(stringifiedStatusCode.equals("200")){
          JSONArray respoJsonArray = new JSONArray(responseObj.asString()); 
  
            for (int it = 0; it < respoJsonArray.length(); it++) {  
              response = new JsonPath(respoJsonArray.getJSONObject(it).toString());  
                    
              if (response.get("customerId") != null) {
                  
                MatcherAssert.assertThat(response.get("customerId"), instanceOf(Integer.class));
              }
      
              if (response.get("accountName") != null) {
                  
                MatcherAssert.assertThat(response.get("accountName"), instanceOf(String.class));
              }
      
              if (response.get("accountNickname") != null) {
                  
                MatcherAssert.assertThat(response.get("accountNickname"), instanceOf(String.class));
              }
      
              if (response.get("accountNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("accountNumber"), instanceOf(String.class));
              }
      
              if (response.get("accountType") != null) {
                  
                MatcherAssert.assertThat(response.get("accountType"), instanceOf(String.class));
              }
      
              if (response.get("activatedDate") != null) {
                  
                MatcherAssert.assertThat(response.get("activatedDate"), instanceOf(String.class));
              }
      
              if (response.get("availableBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("availableBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("availableCash") != null) {
                  
                MatcherAssert.assertThat(response.get("availableCash"), instanceOf(Integer.class));
              }
      
              if (response.get("availableCashLimit") != null) {
                  
                MatcherAssert.assertThat(response.get("availableCashLimit"), instanceOf(Integer.class));
              }
      
              if (response.get("availableCredit") != null) {
                  
                MatcherAssert.assertThat(response.get("availableCredit"), instanceOf(Integer.class));
              }
      
              if (response.get("bankName") != null) {
                  
                MatcherAssert.assertThat(response.get("bankName"), instanceOf(String.class));
              }
      
              if (response.get("branchName") != null) {
                  
                MatcherAssert.assertThat(response.get("branchName"), instanceOf(String.class));
              }
      
              if (response.get("cardName") != null) {
                  
                MatcherAssert.assertThat(response.get("cardName"), instanceOf(String.class));
              }
      
              if (response.get("cardNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("cardNumber"), instanceOf(String.class));
              }
      
              if (response.get("cardStatus") != null) {
                  
                MatcherAssert.assertThat(response.get("cardStatus"), instanceOf(String.class));
              }
      
              if (response.get("cardType") != null) {
                  
                MatcherAssert.assertThat(response.get("cardType"), instanceOf(String.class));
              }
      
              if (response.get("creditLimit") != null) {
                  
                MatcherAssert.assertThat(response.get("creditLimit"), instanceOf(Integer.class));
              }
      
              if (response.get("currency") != null) {
                  
                MatcherAssert.assertThat(response.get("currency"), instanceOf(String.class));
              }
      
              if (response.get("currentBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("currentBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("deactivatedDate") != null) {
                  
                MatcherAssert.assertThat(response.get("deactivatedDate"), instanceOf(String.class));
              }
      
              if (response.get("dueAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("dueAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("dueDate") != null) {
                  
                MatcherAssert.assertThat(response.get("dueDate"), instanceOf(String.class));
              }
      
              if (response.get("earlyWithdrawalPenalty") != null) {
                  
                MatcherAssert.assertThat(response.get("earlyWithdrawalPenalty"), instanceOf(Integer.class));
              }
      
              if (response.get("email") != null) {
                  
                MatcherAssert.assertThat(response.get("email"), instanceOf(String.class));
              }
      
              if (response.get("expDate") != null) {
                  
                MatcherAssert.assertThat(response.get("expDate"), instanceOf(String.class));
              }
      
              if (response.get("fdType") != null) {
                  
                MatcherAssert.assertThat(response.get("fdType"), instanceOf(String.class));
              }
      
              if (response.get("image") != null) {
                  
                MatcherAssert.assertThat(response.get("image"), instanceOf(String.class));
              }
      
              if (response.get("interestRate") != null) {
                  
                MatcherAssert.assertThat(response.get("interestRate"), instanceOf(Integer.class));
              }
      
              if (response.get("internalTransferFromEnabled") != null) {
                  
                MatcherAssert.assertThat(response.get("internalTransferFromEnabled"), instanceOf(Boolean.class));
              }
      
              if (response.get("internalTransferToEnabled") != null) {
                  
                MatcherAssert.assertThat(response.get("internalTransferToEnabled"), instanceOf(Boolean.class));
              }
      
              if (response.get("isPrimaryMobile") != null) {
                  
                MatcherAssert.assertThat(response.get("isPrimaryMobile"), instanceOf(Boolean.class));
              }
      
              if (response.get("isAlternateMobileNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("isAlternateMobileNumber"), instanceOf(Boolean.class));
              }
      
              if (response.get("isStatement") != null) {
                  
                MatcherAssert.assertThat(response.get("isStatement"), instanceOf(Boolean.class));
              }
      
              if (response.get("lastDrawDate") != null) {
                  
                MatcherAssert.assertThat(response.get("lastDrawDate"), instanceOf(String.class));
              }
      
              if (response.get("loanMaturityDate") != null) {
                  
                MatcherAssert.assertThat(response.get("loanMaturityDate"), instanceOf(String.class));
              }
      
              if (response.get("loanOriginationDate") != null) {
                  
                MatcherAssert.assertThat(response.get("loanOriginationDate"), instanceOf(String.class));
              }
      
              if (response.get("location") != null) {
                  
                MatcherAssert.assertThat(response.get("location"), instanceOf(String.class));
              }
      
              if (response.get("lastUpdated") != null) {
                  
                MatcherAssert.assertThat(response.get("lastUpdated"), instanceOf(String.class));
              }
      
              if (response.get("maxTransactionLimit") != null) {
                  
                MatcherAssert.assertThat(response.get("maxTransactionLimit"), instanceOf(String.class));
              }
      
              if (response.get("maturityDate") != null) {
                  
                MatcherAssert.assertThat(response.get("maturityDate"), instanceOf(String.class));
              }
      
              if (response.get("minimumPaymentDue") != null) {
                  
                MatcherAssert.assertThat(response.get("minimumPaymentDue"), instanceOf(String.class));
              }
      
              if (response.get("minimumBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("minimumBalance"), instanceOf(String.class));
              }
      
              if (response.get("monthlyPayment") != null) {
                  
                MatcherAssert.assertThat(response.get("monthlyPayment"), instanceOf(Integer.class));
              }
      
              if (response.get("openingBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("openingBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("originalLoanAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("originalLoanAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("P2PLimit") != null) {
                  
                MatcherAssert.assertThat(response.get("P2PLimit"), instanceOf(Integer.class));
              }
      
              if (response.get("p2pEnabled") != null) {
                  
                MatcherAssert.assertThat(response.get("p2pEnabled"), instanceOf(Integer.class));
              }
      
              if (response.get("paybillEnabled") != null) {
                  
                MatcherAssert.assertThat(response.get("paybillEnabled"), instanceOf(Boolean.class));
              }
      
              if (response.get("payoffAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("payoffAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("personalBankerName") != null) {
                  
                MatcherAssert.assertThat(response.get("personalBankerName"), instanceOf(String.class));
              }
      
              if (response.get("personalBankerContact") != null) {
                      
              if (response.get("personalBankerContact.email") != null) {
                  
                MatcherAssert.assertThat(response.get("personalBankerContact.email"), instanceOf(String.class));
              }
      
              if (response.get("personalBankerContact.mobileNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("personalBankerContact.mobileNumber"), instanceOf(String.class));
              }

              }
      
              if (response.get("phone") != null) {
                  
                MatcherAssert.assertThat(response.get("phone"), instanceOf(Integer.class));
              }
      
              if (response.get("postedBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("postedBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("principalBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("principalBalance"), instanceOf(String.class));
              }
      
              if (response.get("productCode") != null) {
                  
                MatcherAssert.assertThat(response.get("productCode"), instanceOf(String.class));
              }
      
              if (response.get("productName") != null) {
                  
                MatcherAssert.assertThat(response.get("productName"), instanceOf(String.class));
              }
      
              if (response.get("propertyAddress") != null) {
                  
                MatcherAssert.assertThat(response.get("propertyAddress"), instanceOf(String.class));
              }
      
              if (response.get("rewardPoints") != null) {
                  
                MatcherAssert.assertThat(response.get("rewardPoints"), instanceOf(String.class));
              }
      
              if (response.get("routingNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("routingNumber"), instanceOf(String.class));
              }
      
              if (response.get("statementDate") != null) {
                  
                MatcherAssert.assertThat(response.get("statementDate"), instanceOf(String.class));
              }
      
              if (response.get("status") != null) {
                  
                MatcherAssert.assertThat(response.get("status"), instanceOf(String.class));
              }
      
              if (response.get("swiftCode") != null) {
                  
                MatcherAssert.assertThat(response.get("swiftCode"), instanceOf(String.class));
              }
      
              if (response.get("totalBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("totalBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("unbilledAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("unbilledAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("valueAtMaturity") != null) {
                  
                MatcherAssert.assertThat(response.get("valueAtMaturity"), instanceOf(Integer.class));
              }
      
              if (response.get("holdAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("holdAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("unclearFundsAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("unclearFundsAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("averageMonthlyBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("averageMonthlyBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("netWithdrawableBalance") != null) {
                  
                MatcherAssert.assertThat(response.get("netWithdrawableBalance"), instanceOf(Integer.class));
              }
      
              if (response.get("totalTenure") != null) {
                  
                MatcherAssert.assertThat(response.get("totalTenure"), instanceOf(String.class));
              }
      
              if (response.get("remainingTenure") != null) {
                  
                MatcherAssert.assertThat(response.get("remainingTenure"), instanceOf(String.class));
              }
      
              if (response.get("debitAccountNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("debitAccountNumber"), instanceOf(String.class));
              }
      
              if (response.get("lateFee") != null) {
                  
                MatcherAssert.assertThat(response.get("lateFee"), instanceOf(Integer.class));
              }
      
              if (response.get("bounceCharge") != null) {
                  
                MatcherAssert.assertThat(response.get("bounceCharge"), instanceOf(Integer.class));
              }
      
              if (response.get("totalCharges") != null) {
                  
                MatcherAssert.assertThat(response.get("totalCharges"), instanceOf(Integer.class));
              }
      
              if (response.get("overDueAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("overDueAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("cardDetails") != null) {
                        
                  for (int i = 0; i < response.getList("cardDetails").size(); i++) {      
              if (response.get("cardDetails["+ i +"].cardName") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].cardName"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].cardNumber") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].cardNumber"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].cardStatus") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].cardStatus"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].cardImage") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].cardImage"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].cardType") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].cardType"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].expDate") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].expDate"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].displayCardStatus") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].displayCardStatus"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].primaryCard") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].primaryCard"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].cardRestrictions") != null) {
                      
              if (response.get("cardDetails["+ i +"].cardRestrictions.countries") != null) {
                        
                  for (int i1 = 0; i1 < response.getList("cardDetails["+ i +"].cardRestrictions.countries").size(); i1++) {        
                    }    
                MatcherAssert.assertThat(response.getList("cardDetails["+ i +"].cardRestrictions.countries"), instanceOf(List.class));

              }
      
              if (response.get("cardDetails["+ i +"].cardRestrictions.MCC") != null) {
                        
                  for (int i1 = 0; i1 < response.getList("cardDetails["+ i +"].cardRestrictions.MCC").size(); i1++) {        
                    }    
                MatcherAssert.assertThat(response.getList("cardDetails["+ i +"].cardRestrictions.MCC"), instanceOf(List.class));

              }

              }
      
              if (response.get("cardDetails["+ i +"].blockReason") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].blockReason"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].nameOnCard") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].nameOnCard"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].cardNetwork") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].cardNetwork"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].autopay") != null) {
                      
              if (response.get("cardDetails["+ i +"].autopay.enabled") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].autopay.enabled"), instanceOf(Boolean.class));
              }
      
              if (response.get("cardDetails["+ i +"].autopay.sourceAccountId") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].autopay.sourceAccountId"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].autopay.paymentType") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].autopay.paymentType"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].autopay.onStatementDate") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].autopay.onStatementDate"), instanceOf(Boolean.class));
              }
      
              if (response.get("cardDetails["+ i +"].autopay.dayOfMonth") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].autopay.dayOfMonth"), instanceOf(String.class));
              }

              }
      
              if (response.get("cardDetails["+ i +"].dueAmount") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].dueAmount"), instanceOf(Integer.class));
              }
      
              if (response.get("cardDetails["+ i +"].dueDate") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].dueDate"), instanceOf(String.class));
              }
      
              if (response.get("cardDetails["+ i +"].minimumPaymentDue") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].minimumPaymentDue"), instanceOf(Integer.class));
              }
      
              if (response.get("cardDetails["+ i +"].partialPaymentPaid") != null) {
                  
                MatcherAssert.assertThat(response.get("cardDetails["+ i +"].partialPaymentPaid"), instanceOf(Integer.class));
              }
        
                    }    
                MatcherAssert.assertThat(response.getList("cardDetails"), instanceOf(List.class));

              }
      
              if (response.get("IsCrossAccount") != null) {
                  
                MatcherAssert.assertThat(response.get("IsCrossAccount"), instanceOf(Boolean.class));
              }

            }  
          }
if(stringifiedStatusCode.equals("401")){					System.out.println("Description: Error: Authorisation failed.");
      
              if (response.get("err") != null) {
                      
              if (response.get("err.message") != null) {
                  
                MatcherAssert.assertThat(response.get("err.message"), instanceOf(String.class));
              }

              }
				}
if(stringifiedStatusCode.equals("404")){					System.out.println("Description: Error: Not Found");
      
              if (response.get("err") != null) {
                      
              if (response.get("err.message") != null) {
                  
                MatcherAssert.assertThat(response.get("err.message"), instanceOf(String.class));
              }

              }
				}


            }  
    }
}
