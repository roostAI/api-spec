# ********RoostGPT********

# Test generated by RoostGPT for test abc using AI Type  and AI Model 
# 
# Feature file generated for /laureates_get for http method type GET 
# RoostTestHash=41cb7e02aa
# 
# 

# ********RoostGPT********
Feature: Test /2.1/laureates endpoint

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Test GET /2.1/laureates with valid parameters
    Given path '/2.1/laureates'
    And param offset = <offset>
    And param limit = <limit>
    And param sort = <sort>
    And param ID = <ID>
    And param name = <name>
    And param gender = <gender>
    And param motivation = <motivation>
    And param affiliation = <affiliation>
    And param residence = <residence>
    And param birthDate = <birthDate>
    And param birthDateTo = <birthDateTo>
    And param deathDate = <deathDate>
    And param deathDateTo = <deathDateTo>
    And param foundedDate = <foundedDate>
    And param birthCity = <birthCity>
    And param birthCountry = <birthCountry>
    And param birthContinent = <birthContinent>
    And param deathCity = <deathCity>
    And param deathCountry = <deathCountry>
    And param deathContinent = <deathContinent>
    And param foundedCity = <foundedCity>
    And param foundedCountry = <foundedCountry>
    And param foundedContinent = <foundedContinent>
    And param HeadquartersCity = <HeadquartersCity>
    And param HeadquartersCountry = <HeadquartersCountry>
    And param HeadquartersContinent = <HeadquartersContinent>
    And param nobelPrizeYear = <nobelPrizeYear>
    And param yearTo = <yearTo>
    And param nobelPrizeCategory = <nobelPrizeCategory>
    And param format = <format>
    And param csvLang = <csvLang>
    When method get
    Then status 200
    And match response.laureates == '#array'
    And match response.laureates[0] == '#object'
    And match response.laureates[0].id == '#number'
    And match response.laureates[0].laureateIfPerson == '#object'
    And match response.laureates[0].laureateIfOrg == '#object'
    And match response.laureates[0].wikipedia == '#object'
    And match response.laureates[0].wikidata == '#object'
    And match response.laureates[0].sameAs == '#array'
    And match response.laureates[0].links == '#array'
    And match response.laureates[0].nobelPrizes == '#array'
    And match response.meta == '#object'
    And match response.meta.offset == '#number'
    And match response.meta.limit == '#number'
    And match response.meta.sort == '#string'
    And match response.meta.ID == '#number'
    And match response.meta.name == '#string'
    And match response.meta.gender == '#string'
    And match response.meta.motivation == '#string'
    And match response.meta.affiliation == '#string'
    And match response.meta.residence == '#string'
    And match response.meta.birthDate == '#string'
    And match response.meta.birthDateTo == '#string'
    And match response.meta.deathDate == '#string'
    And match response.meta.deathDateTo == '#string'
    And match response.meta.foundedDate == '#string'
    And match response.meta.birthCity == '#string'
    And match response.meta.birthCountry == '#string'
    And match response.meta.birthContinent == '#string'
    And match response.meta.deathCity == '#string'
    And match response.meta.deathCountry == '#string'
    And match response.meta.deathContinent == '#string'
    And match response.meta.foundedCity == '#string'
    And match response.meta.foundedCountry == '#string'
    And match response.meta.foundedContinent == '#string'
    And match response.meta.headquartersCity == '#string'
    And match response.meta.headquartersCountry == '#string'
    And match response.meta.headquartersContinent == '#string'
    And match response.meta.nobelPrizeYear == '#number'
    And match response.meta.yearTo == '#number'
    And match response.meta.nobelPrizeCategory == '#string'
    And match response.meta.count == '#number'
    And match response.links == '#array'
    And match response.links[0] == '#object'
    And match response.links[0].first == '#string'
    And match response.links[0].prev == '#string'
    And match response.links[0].self == '#string'
    And match response.links[0].next == '#string'
    And match response.links[0].last == '#string'

    Examples:
      | read('laureates_get.csv') |
