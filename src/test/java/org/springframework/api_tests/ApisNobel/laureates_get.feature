# ********RoostGPT********

# Test generated by RoostGPT for test Exi-PW-Karate-VertexAi using AI Type Vertex AI and AI Model claude-3-7-sonnet
# 
# Feature file generated for /laureates_get for http method type GET 
# RoostTestHash=41cb7e02aa
# 
# 

# ********RoostGPT********
Feature: Nobel Laureates API Tests

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Get laureates with different query parameters
    Given path '/2.1/laureates'
    And param offset = <offset>
    And param limit = <limit>
    And param sort = '<sort>'
    When method get
    Then status 200
    And match response == '#object'
    And match response.laureates == '#array'
    And match response.meta == '#object'
    And match response.links == '#array'
    And match response.meta.offset == <offset>
    And match response.meta.limit == <limit>
    And match response.meta.sort == '<sort>'
    And match response.meta.count == '#number'

    Examples:
      | read('laureates_get.csv') |

  Scenario Outline: Get laureates by ID
    Given path '/2.1/laureates'
    And param ID = <ID>
    When method get
    Then status 200
    And match response == '#object'
    And match response.laureates == '#array'
    And match response.laureates[0].id == <ID>

    Examples:
      | read('laureates_get.csv') |

  Scenario Outline: Get laureates by name and gender
    Given path '/2.1/laureates'
    And param name = '<name>'
    And param gender = '<gender>'
    When method get
    Then status 200
    And match response == '#object'
    And match response.laureates == '#array'
    And match response.meta.name == '<name>'
    And match response.meta.gender == '<gender>'

    Examples:
      | read('laureates_get.csv') |

  Scenario Outline: Get laureates by Nobel Prize category and year
    Given path '/2.1/laureates'
    And param nobelPrizeCategory = '<category>'
    And param nobelPrizeYear = <year>
    When method get
    Then status 200
    And match response == '#object'
    And match response.laureates == '#array'
    And match response.meta.nobelPrizeCategory == '<category>'
    And match response.meta.nobelPrizeYear == <year>

    Examples:
      | read('laureates_get.csv') |

  Scenario Outline: Get laureates by birth location
    Given path '/2.1/laureates'
    And param birthCity = '<city>'
    And param birthCountry = '<country>'
    And param birthContinent = '<continent>'
    When method get
    Then status 200
    And match response == '#object'
    And match response.laureates == '#array'
    And match response.meta.birthCity == '<city>'
    And match response.meta.birthCountry == '<country>'
    And match response.meta.birthContinent == '<continent>'

    Examples:
      | read('laureates_get.csv') |

  Scenario Outline: Get laureates with date ranges
    Given path '/2.1/laureates'
    And param birthDate = <birthDate>
    And param birthDateTo = '<birthDateTo>'
    When method get
    Then status 200
    And match response == '#object'
    And match response.laureates == '#array'
    And match response.meta.birthDate == '#string'
    And match response.meta.birthDateTo == '<birthDateTo>'

    Examples:
      | read('laureates_get.csv') |

  Scenario: Test invalid parameters - expect 400 error
    Given path '/2.1/laureates'
    And param offset = -1
    When method get
    Then status 400
    And match response.code == '#string'
    And match response.message == '#string'

  Scenario: Test not found - expect 404 error
    Given path '/2.1/laureates'
    And param ID = 999999
    When method get
    Then status 404
    And match response.code == '#string'
    And match response.message == '#string'

  Scenario: Test validation error - expect 422 error
    Given path '/2.1/laureates'
    And param nobelPrizeYear = 1800
    When method get
    Then status 422
    And match response.code == '#string'
    And match response.message == '#string'

  Scenario: Verify response structure and data types
    Given path '/2.1/laureates'
    And param limit = 1
    When method get
    Then status 200
    And match response.laureates == '#array'
    And match response.laureates[0] == '#object'
    And match response.laureates[0].id == '#number'
    And match response.laureates[0].laureateIfPerson == '##object'
    And match response.laureates[0].laureateIfOrg == '##object'
    And match response.laureates[0].wikipedia == '##object'
    And match response.laureates[0].wikidata == '##object'
    And match response.laureates[0].sameAs == '##array'
    And match response.laureates[0].links == '##array'
    And match response.laureates[0].nobelPrizes == '##array'
    And match response.meta == '#object'
    And match response.meta.count == '#number'
    And match response.links == '#array'
