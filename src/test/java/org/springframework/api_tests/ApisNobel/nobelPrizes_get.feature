# ********RoostGPT********

# Test generated by RoostGPT for test abc using AI Type  and AI Model 
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=977dd819cb
# 
# 

# ********RoostGPT********
Feature: Nobel Prizes API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: '#(karate.properties['AUTH_TOKEN'])' }

  Scenario Outline: Obtain information about all Nobel Prizes or search for a specific set of Nobel Prizes
    Given path '/2.1/nobelPrizes'
    And param offset = <offset>
    And param limit = <limit>
    And param sort = <sort>
    And param nobelPrizeYear = <nobelPrizeYear>
    And param yearTo = <yearTo>
    And param nobelPrizeCategory = <nobelPrizeCategory>
    And param format = <format>
    And param csvLang = <csvLang>
    When method get
    Then status 200
    And match response.nobelPrizes contains { awardYear: '#number', category: '#string', categoryFullName: '#string', dateAwarded: '#string', prizeAmount: '#number', prizeAmountAdjusted: '#number', topMotivation: '#string', laureates: '#array' }
    And match response.meta == { offset: '#number', limit: '#number', nobelPrizeYear: '#number', yearTo: '#number', nobelPrizeCategory: '#string', count: '#number' }
    And match response.links contains { first: '#string', prev: '#string', self: '#string', next: '#string', last: '#string' }

    Examples:
      | read('nobelPrizes_get.csv') |

  Scenario: Test for bad request
    Given path '/2.1/nobelPrizes'
    And param offset = 'invalid'
    When method get
    Then status 400
    And match response == { code: '#string', message: '#string' }

  Scenario: Test for not found
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = 1800
    When method get
    Then status 404
    And match response == { code: '#string', message: '#string' }

  Scenario: Test for unprocessable entity
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = 1800
    And param yearTo = 1900
    When method get
    Then status 422
    And match response == { code: '#string', message: '#string' }
