# ********RoostGPT********

# Test generated by RoostGPT for test api-spec using AI Type  and AI Model 
# 
# Feature file generated for /nobelPrize/{category}/{year}_get for http method type GET 
# RoostTestHash=adfce3f1d2
# 
# 

# ********RoostGPT********
Feature: Nobel Prize API - Retrieve Nobel Prize Information

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Get Nobel Prize information for <category> in <year>
    Given path '2.1/nobelPrize', '<category>', '<year>'
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method GET
    Then status 200
    And match response ==
      """
      {
        nobelPrize: {
          awardYear: '#number',
          category: {
            en: '#string',
            se: '#string',
            no: '#string'
          },
          categoryFullName: {
            en: '#string',
            se: '#string',
            no: '#string'
          },
          dateAwarded: '#regex \\d{4}-\\d{2}-\\d{2}',
          prizeAmount: '#number',
          prizeAmountAdjusted: '#number',
          topMotivation: {
            en: '#string',
            se: '#string',
            no: '#string'
          },
          laureates: '#[] {id: ##number, name: {en: ##string, se: ##string, no: ##string}, portion: ##string, sortOrder: ##string, motivation: {en: ##string, se: ##string, no: ##string}, links: ##[] {rel: ##string, href: ##string, action: ##string, types: ##string}}'
        }
      }
      """
    And match header Content-Type contains 'application/json'

    Examples:
      | read('nobelPrize_category_year_get.csv') |

  Scenario: Get Nobel Prize information with invalid category
    Given path '2.1/nobelPrize', 'invalid', '2020'
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method GET
    Then status 400
    And match response == { code: '#string', message: '#string' }

  Scenario: Get Nobel Prize information with invalid year
    Given path '2.1/nobelPrize', 'che', '1900'
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method GET
    Then status 400
    And match response == { code: '#string', message: '#string' }

  Scenario: Get Nobel Prize information for non-existent prize
    Given path '2.1/nobelPrize', 'che', '2050'
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    When method GET
    Then status 404
    And match response == { code: '#string', message: '#string' }

  Scenario: Get Nobel Prize information in CSV format
    Given path '2.1/nobelPrize', 'che', '2020'
    And header Authorization = 'Bearer ' + karate.properties['AUTH_TOKEN']
    And header Accept = 'text/csv'
    When method GET
    Then status 200
    And match header Content-Type contains 'text/csv'
