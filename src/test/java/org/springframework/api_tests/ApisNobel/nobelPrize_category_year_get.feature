# ********RoostGPT********

# Test generated by RoostGPT for test abc using AI Type  and AI Model 
# 
# Feature file generated for /nobelPrize/{category}/{year}_get for http method type GET 
# RoostTestHash=9818bf6b39
# 
# 

# ********RoostGPT********
Feature: Nobel Prize Information

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:4010'
    * url urlBase
    * configure headers = { Authorization: '#(karate.properties['AUTH_TOKEN'])' }

  Scenario Outline: Get Nobel Prize information by category and year
    Given path '2.1', 'nobelPrize', '<category>', '<year>'
    When method get
    Then status 200
    And match response contains { nobelPrize: '#object' }
    And match response.nobelPrize contains { awardYear: '#number', category: '#object', categoryFullName: '#object', dateAwarded: '#string', prizeAmount: '#number', prizeAmountAdjusted: '#number', topMotivation: '#object', laureates: '#array' }
    And match response.nobelPrize.category contains { en: '#string', se: '#string' }
    And match response.nobelPrize.categoryFullName contains { en: '#string', se: '#string' }
    And match response.nobelPrize.topMotivation contains { en: '#string', se: '#string' }
    And match each response.nobelPrize.laureates contains { id: '#number', name: '#object', portion: '#string', sortOrder: '#string', motivation: '#object', links: '#array' }
    And match each response.nobelPrize.laureates.name contains { en: '#string', se: '#string' }
    And match each response.nobelPrize.laureates.motivation contains { en: '#string', se: '#string' }
    And match each response.nobelPrize.laureates.links contains { rel: '#string', href: '#string', action: '#string', types: '#string' }

    Examples:
      | read('nobelPrize_category_year_get.csv') |
