# ********RoostGPT********

# Test generated by RoostGPT for test KaratetTest using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /employees_post for http method type POST 
# RoostTestHash=b517afeac4
# 
# 

# ********RoostGPT********
Feature: Employee API Tests

  Background:
    * def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: '#(karate.properties["AUTH_TOKEN"])' }

  Scenario Outline: Add Employee with valid data
    Given path 'employees'
    And request
      """
      { 
        "email": "<email>", 
        "jobTitle": "<jobTitle>", 
        "name": "<name>" 
      }
      """
    When method POST
    Then status 201
    And match response == null

    Examples:
      | read('employees_post.csv') |

  Scenario Outline: Add Employee with invalid data
    Given path 'employees'
    And request
      """
      { 
        "email": "<email>", 
        "jobTitle": "<jobTitle>", 
        "name": "<name>" 
      }
      """
    When method POST
    Then status 400
    And match response == null

    Examples:
      | email         | jobTitle | name |
      | invalid-email |          |      |
      |               |          |      |

  Scenario Outline: Add Employee with existing data
    Given path 'employees'
    And request
      """
      { 
        "email": "<email>", 
        "jobTitle": "<jobTitle>", 
        "name": "<name>" 
      }
      """
    When method POST
    Then status 409
    And match response == null

    Examples:
      | email                    | jobTitle       | name       |
      | john.smith@acme-corp.com | System Analyst | John Smith |
