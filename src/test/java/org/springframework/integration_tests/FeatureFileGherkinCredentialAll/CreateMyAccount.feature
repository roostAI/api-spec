# ********RoostGPT********

# Test generated by RoostGPT for test pw-it-Karate-1755496326423 using AI Type AWS Bedrock Runtime AI and AI Model anthropic.claude-3-sonnet-20240229-v1:0
# 
# ROOST_METHOD_HASH=1225a4a07f
# ROOST_METHOD_SIG_HASH=3a429a7e0a
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Credential Wallet API\r\n' +
#     '  As a user of the Credential Wallet API\r\n' +
#     '  I want to be able to perform CRUD operations on accounts\r\n' +
#     '  So that I can manage my account effectively',
#   background: 'Background:\r\n    Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Create my account',
#     steps: 'When the client sends a POST request "/accounts" with the accounts_body payload\r\n' +
#       'Then create an account with the specified informatio\r\n' +
#       'And verify the account created using GET request for "/me"',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Credential Wallet API
  As a user of the Credential Wallet API
  I want to be able to perform CRUD operations on accounts
  So that I can manage my account effectively

  Background:
    * def API_HOST_URL = 'http://localhost:8080'
    * url API_HOST_URL

  Scenario Outline: Create my account
    * def accounts_body = // Fetch the accounts_body payload from the provided API spec or gherkin scenario
    Given path '/accounts'
    And request accounts_body
    When method POST
    Then status 201
    Given path '/me'
    When method GET
    Then status 200

    Examples:

  Scenario: Validate the response body, headers, and other specifications as per the API spec
    * def accounts_body = // Fetch the accounts_body payload from the provided API spec or gherkin scenario
    Given path '/accounts'
    And request accounts_body
    When method POST
    Then status 201
    And match response == accounts_body

  Scenario: Verify the account created using GET request for "/me"
    Given path '/me'
    When method GET
    Then status 200
    And match response.path == '/me'
