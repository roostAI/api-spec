# ********RoostGPT********

# Test generated by RoostGPT for test integration using AI Type  and AI Model 
# 
# ROOST_METHOD_HASH=25259bbe63
# ROOST_METHOD_SIG_HASH=536a03cafe
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: Credential Wallet API\r\n' +
#     '  As a user of the Credential Wallet API\r\n' +
#     '  I want to be able to perform CRUD operations on accounts\r\n' +
#     '  So that I can manage my account effectively',
#   background: 'Background:\r\n    Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Grant authorization',
#     steps: 'Given an existing account, create another account\r\n' +
#       'When the client sends a POST request to "/authorizations"\r\n' +
#       'Then grant access to your account and confirm access via GET request to "/authorizations"',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "GrantAuthorizationScenario.csv"
    skipHeader: true
    fields:
      - koreUserId
      - botId
      - accountId
  phases:
    - duration: 60
      arrivalRate: 10

scenarios:
  - name: "Grant authorization"
    flow:
      - log: "Creating an authorization for an existing account"
      - post:
          url: "/authorizations"
          headers:
            Content-Type: application/json
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
          payload:
            accountName: "Test Account"
            accountNumber: "1042345"
            customerId: 1045300
            cardNumber: "12345678901690"
            description: "Authorization request for account access"
          expect:
            statusCode: 200
          capture:
            - json: "$.authorizationId"
              as: "authorizationId"
      - think: 2
      - log: "Confirming authorization access"
      - get:
          url: "/authorizations/{{ authorizationId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
          expect:
            statusCode: 200
            json:
              - path: "$.status"
                equals: "confirmed"
      - think: 2
