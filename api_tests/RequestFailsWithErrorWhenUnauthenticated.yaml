# ********RoostGPT********

# Test generated by RoostGPT for test pw-test-1740811612971 using AI Type deepseek_ai and AI Model deepseek-reasoner
# 
# ROOST_METHOD_HASH=f93f9c01c9
# ROOST_METHOD_SIG_HASH=66e25557dd
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: Credential Wallet API\r\n' +
#     '  As a user of the Credential Wallet API\r\n' +
#     '  I want to get registration details of people allowed to receive credentials \r\n' +
#     '  So that I can manage my account effectively',
#   background: 'Background:\r\n    Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Request must fail with error if request not authenticated',
#     steps: 'Given id of recipient as 09237482347 in path parameter\r\n' +
#       'And size=43 and offset=22 in request query\r\n' +
#       'When the client sends a GET request to endpoint "/recipients/persons/{id}/registrations" \r\n' +
#       'When authentication token is not sent in request\r\n' +
#       'Then for unauthenticated request having status code 401, Verify that headers have api-version\r\n' +
#       'And response body must have appropriate error schema',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}/employees"
  plugins:
    expect: {}
  ensure:
    expectedStatusCode: true
  payload:
    path: RequestFailsWithErrorWhenUnauthenticated.csv
    fields:
      - validId
      - invalidId
    skipHeader: true
    delimiter: "^|^"

scenarios:
  - name: Validate employee endpoints authentication and response schemas
    flow:
      - log: "Test GET employee by valid ID without authentication - should succeed with 200"
      - get:
          url: "/{{ validId }}"
          capture:
            json: "$.id"
            as: "capturedId"
          expect:
            - statusCode: 200
            - contentType: json
            - hasProperty: id
            - hasProperty: jobTitle
            - hasProperty: name
            - hasProperty: email
      - think: 1

      - log: "Test GET employee with invalid ID format - should fail with 404"
      - get:
          url: "/{{ invalidId }}"
          expect:
            - statusCode: 404
      - think: 1

      - log: "Test POST employee with valid payload without authentication - should succeed with 201"
      - post:
          url: "/"
          headers:
            Content-Type: application/json
          json:
            id: "d290f1ee-6c54-4b01-90e6-d701748f0851"
            jobTitle: "System Analyst"
            name: "John Smith"
            email: "john.smith@acme-corp.com"
          expect:
            - statusCode: 201
      - think: 1

      - log: "Test search employees with valid query parameter - should succeed with 200"
      - get:
          url: "/?searchString=John"
          expect:
            - statusCode: 200
            - contentType: json
            - hasProperty: "[0].id"
            - hasProperty: "[0].jobTitle"
            - hasProperty: "[0].name"
            - hasProperty: "[0].email"
      - think: 1

      - log: "Test search employees with invalid query format - should fail with 400"
      - get:
          url: "/?searchString="
          expect:
            - statusCode: 400
