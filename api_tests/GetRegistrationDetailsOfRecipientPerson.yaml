# ********RoostGPT********

# Test generated by RoostGPT for test pw-test-1741081413915 using AI Type Open AI and AI Model gpt-4
# 
# ROOST_METHOD_HASH=d4875ba7c9
# ROOST_METHOD_SIG_HASH=deac2363dc
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: Credential Wallet API\r\n' +
#     '  As a user of the Credential Wallet API\r\n' +
#     '  I want to get registration details of people allowed to receive credentials \r\n' +
#     '  So that I can manage my account effectively',
#   background: 'Background:\r\n    Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Get Registration Details Of Recipient Person',
#     steps: 'Given id of recipient as 27364922937 in path parameter\r\n' +
#       'And size=13 and offset=42 in request query\r\n' +
#       'When the client sends a GET request to endpoint "/recipients/persons/{id}/registrations" \r\n' +
#       'When authentication token is sent in request\r\n' +
#       'Then for successful request having status code 200, Verify that headers have api-version, page-size and  page-offset\r\n' +
#       'And response body must have element registrations and total.',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  plugins:
    expect: {}
  payload:
    path: "GetRegistrationDetailsOfRecipientPerson.csv"
    fields:
      - "id"
    skipHeader: true
    delimiter: "^|^"
  environments:
    dev:
      target: "http://localhost:8080"
      variables:
        AUTH_TOKEN: "Bearer token"

scenarios:
  - name: "Get Registration Details Of Recipient Person"
    flow:
      - get:
          url: "/employees/{{ id }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "jobTitle"
            - hasProperty: "name"
            - hasProperty: "email"
          log: "Get employee by ID"
      - think: 1
      - post:
          url: "/employees"
          json:
            id: "{{ id }}"
            jobTitle: "System Analyst"
            name: "John Smith"
            email: "john.smith@acme-corp.com"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 201
          log: "Add an employee"
      - think: 1
      - get:
          url: "/employees?searchString=John Smith"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "jobTitle"
            - hasProperty: "name"
            - hasProperty: "email"
          log: "Search employees"
      - think: 1
