# ********RoostGPT********

# Test generated by RoostGPT for test artillery-api using AI Type  and AI Model 
# 
# Test generated for /nobelPrizes_get for http method type GET in artillery framework
# RoostTestHash=977dd819cb
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "nobelPrizes_get_success.csv"
    skipHeader: true
    delimiter: "^|^"

scenarios:
  - name: "Validate Successful API Response for Nobel Prizes"
    flow:
      - log: "Starting test scenario to validate successful responses for Nobel Prizes"
      - get:
          url: "/2.1/nobelPrizes?offset=10&limit=5&nobelPrizeYear=1990"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
      - expect:
          statusCode: 200
      - expect:
          contentType: "application/json"
      - expect:
          hasHeader: "Content-Type"
      - expect:
          hasProperty: "nobelPrizes"
      - expect:
          jmespath: 
            - path: "nobelPrizes[0].awardYear"
              equals: 1990
      - expect:
          jmespath: 
            - path: "nobelPrizes[0].category.en"
              equals: "Physics"
      - expect:
          jmespath: 
            - path: "meta.offset"
              equals: 10
      - expect:
          jmespath: 
            - path: "meta"
              exists: true
      - think: 1
      - log: "Testing successful API response with different filters"
      - get:
          url: "/2.1/nobelPrizes?nobelPrizeCategory=phy&format=json"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
      - expect:
          statusCode: 200
      - expect:
          contentType: "application/json"
      - expect:
          hasHeader: "Content-Type"
      - expect:
          hasProperty: "nobelPrizes"
      - expect:
          jmespath:
            - path: "meta.nobelPrizeCategory"
              equals: "phy"
      - expect:
          jmespath:
            - path: "meta"
              exists: true
      - think: 1
