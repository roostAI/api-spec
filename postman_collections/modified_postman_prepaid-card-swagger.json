{
  "item": [
    {
      "name": "users",
      "item": [
        {
          "name": "Register a new user",
          "request": {
            "name": "Register a new user",
            "description": {},
            "url": {
              "path": [
                "users",
                "register"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"password\": \"<password>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "User created successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "users",
                    "register"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"userId\": \"91354022-9aca-19da-3f41-ca7edab46d97\",\n  \"fullName\": \"string\",\n  \"email\": \"A0lyXo@aQXIH.hyq\",\n  \"kycStatus\": \"PENDING_REVIEW\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "users",
                    "register"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"code\": \"INVALID_INPUT\",\n  \"message\": \"The email address is already in use.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "name": "User login",
          "request": {
            "name": "User login",
            "description": {},
            "url": {
              "path": [
                "users",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<password>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Login successful",
              "originalRequest": {
                "url": {
                  "path": [
                    "users",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"token\": \"jwt.token.string\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "users",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"code\": \"INVALID_INPUT\",\n  \"message\": \"The email address is already in use.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "name": "Get current user's profile",
          "request": {
            "name": "Get current user's profile",
            "description": {},
            "url": {
              "path": [
                "users",
                "me"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{bearerToken}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "User profile details",
              "originalRequest": {
                "url": {
                  "path": [
                    "users",
                    "me"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"userId\": \"91354022-9aca-19da-3f41-ca7edab46d97\",\n  \"fullName\": \"string\",\n  \"email\": \"A0lyXo@aQXIH.hyq\",\n  \"kycStatus\": \"PENDING_REVIEW\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "users",
                    "me"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"code\": \"INVALID_INPUT\",\n  \"message\": \"The email address is already in use.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "name": "Submit KYC documents",
      "request": {
        "name": "Submit KYC documents",
        "description": {},
        "url": {
          "path": [
            "kyc",
            "upload"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "multipart/form-data"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{bearerToken}}"
            }
          ]
        },
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "documentType",
              "value": "<string>",
              "type": "text",
              "description": "(This can only be one of PASSPORT,DRIVERS_LICENSE)"
            },
            {
              "key": "documentFront",
              "type": "file",
              "description": ""
            },
            {
              "key": "documentBack",
              "type": "file",
              "description": ""
            }
          ]
        }
      },
      "response": [
        {
          "name": "Documents accepted, verification pending",
          "originalRequest": {
            "url": {
              "path": [
                "kyc",
                "upload"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "(This can only be one of PASSPORT,DRIVERS_LICENSE)",
                    "type": "text/plain"
                  },
                  "key": "documentType",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "documentFront",
                  "value": "<binary>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "documentBack",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            }
          },
          "status": "Accepted",
          "code": 202,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"userId\": \"91354022-9aca-19da-3f41-ca7edab46d97\",\n  \"fullName\": \"string\",\n  \"email\": \"A0lyXo@aQXIH.hyq\",\n  \"kycStatus\": \"PENDING_REVIEW\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        },
        {
          "name": "Bad Request",
          "originalRequest": {
            "url": {
              "path": [
                "kyc",
                "upload"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "(This can only be one of PASSPORT,DRIVERS_LICENSE)",
                    "type": "text/plain"
                  },
                  "key": "documentType",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "documentFront",
                  "value": "<binary>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "documentBack",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"code\": \"INVALID_INPUT\",\n  \"message\": \"The email address is already in use.\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json"
        }
      ],
      "event": [],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "name": "cards",
      "item": [
        {
          "name": "List user's cards",
          "request": {
            "name": "List user's cards",
            "description": {},
            "url": {
              "path": [
                "cards"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{bearerToken}}"
                }
              ]
            }
          },
          "response": [
            {
              "name": "A list of the user's cards",
              "originalRequest": {
                "url": {
                  "path": [
                    "cards"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"cardId\": \"6754743b-685f-b280-5b5e-049b62b132b0\",\n    \"lastFourDigits\": \"1234\",\n    \"cardType\": \"VIRTUAL\",\n    \"status\": \"BLOCKED\",\n    \"balance\": 4887.787391209899,\n    \"currency\": \"USD\"\n  },\n  {\n    \"cardId\": \"c75aa000-5106-e7b2-c769-794d99d391a8\",\n    \"lastFourDigits\": \"1234\",\n    \"cardType\": \"VIRTUAL\",\n    \"status\": \"EXPIRED\",\n    \"balance\": 4758.279109828911,\n    \"currency\": \"USD\"\n  }\n]",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "cards"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"code\": \"INVALID_INPUT\",\n  \"message\": \"The email address is already in use.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "name": "Issue a new card",
          "request": {
            "name": "Issue a new card",
            "description": {},
            "url": {
              "path": [
                "cards"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{bearerToken}}"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cardType\": \"<string>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Card issued successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "cards"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"cardId\": \"b8fe07a4-b6c1-121f-e818-b2a1625b0443\",\n  \"lastFourDigits\": \"1234\",\n  \"cardType\": \"VIRTUAL\",\n  \"status\": \"EXPIRED\",\n  \"balance\": 8571.840663294408,\n  \"currency\": \"USD\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "cards"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"code\": \"INVALID_INPUT\",\n  \"message\": \"The email address is already in use.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "name": "{cardId}",
          "item": [
            {
              "name": "Load funds onto a card",
              "request": {
                "name": "Load funds onto a card",
                "description": {},
                "url": {
                  "path": [
                    "cards",
                    ":cardId",
                    "load"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "{{cardId}}",
                      "key": "cardId",
                      "description": "(Required)"
                    }
                  ]
                },
                "header": [
                  {
                    "disabled": false,
                    "description": "A unique key to prevent duplicate load requests.",
                    "key": "Idempotency-Key",
                    "value": "{{Idempotency-Key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{bearerToken}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"amount\": \"{{amount_*double}}\",\n    \"sourceId\": \"{{sourceId_*string}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "name": "Load successful, returns new balance",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "cards",
                        ":cardId",
                        "load"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{cardId}}",
                          "key": "cardId",
                          "description": "(Required)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "{{Authorization}}"
                      },
                      {
                        "disabled": false,
                        "description": "A unique key to prevent duplicate load requests.",
                        "key": "Idempotency-Key",
                        "value": "{{Idempotency-Key}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"balance\": 6376.146705408412,\n  \"currency\": \"USD\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "cards",
                        ":cardId",
                        "load"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{cardId}}",
                          "key": "cardId",
                          "description": "(Required)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "{{Authorization}}"
                      },
                      {
                        "disabled": false,
                        "description": "A unique key to prevent duplicate load requests.",
                        "key": "Idempotency-Key",
                        "value": "{{Idempotency-Key}}"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"code\": \"INVALID_INPUT\",\n  \"message\": \"The email address is already in use.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "name": "Payment source declined",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "cards",
                        ":cardId",
                        "load"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "{{cardId}}",
                          "key": "cardId",
                          "description": "(Required)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "{{Authorization}}"
                      },
                      {
                        "disabled": false,
                        "description": "A unique key to prevent duplicate load requests.",
                        "key": "Idempotency-Key",
                        "value": "{{Idempotency-Key}}"
                      }
                    ],
                    "method": "POST",
                    "body": {}
                  },
                  "status": "Payment Required",
                  "code": 402,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      " \n// ********RoostGPT********\n/*\nTest generated by RoostGPT for test prepaid-yaml using AI Type AWS Bedrock Runtime AI and AI Model eu.anthropic.claude-3-7-sonnet-20250219-v1:0\n\n\nTest generated for cards/{cardId}/load for http method type post in postman framework\n\n*/\n\n// ********RoostGPT********\n\n\nconst ld = require('lodash');\nlet responseData;\nconst contentType = pm.response.headers.get('Content-Type');\nif(contentType === \"application/xml\"){\n    var parseString = require('xml2js').parseString;\n    parseString(pm.response.body, function (err,result) {\n      if (err) {\n         console.error('Error parsing XML:', err);\n      } else {\n        responseData = result;  \n      }\n    });\n} else{\n      try {\n            responseData = pm.response.json();\n      } catch (error) {\n            console.log(\"Error parsing response:\", error.message);\n      }\n}\n// Status code check with early exit\nconst expectedStatusCode = parseInt(pm.variables.get(\"statusCode\"));\nlet statusMatches = true;\nif (pm.variables.get(\"statusCode\")) {\n  statusMatches = (pm.response.code === expectedStatusCode);\n  pm.test(\"Status code matches expected value\", function () {\n      pm.expect(pm.response.code).to.equal(expectedStatusCode);\n  });\n}\n\nif (pm.response.code == 200 && statusMatches){\n    pm.test(\"Load successful, returns new balance\", function () {\n        pm.expect(pm.response.status).to.be.eql(\"OK\");\n        try {\n            if (responseData !== null && responseData !== undefined) {\n        pm.test('Response has the `balance` field',function(){\n            try {\n                if (responseData && pm.expect(responseData).to.have.nested.property(`balance`)) {\n                    const value = ld.get(responseData, `balance`, null);\n                    if (value !== null && value !== undefined) {\n                        pm.expect(typeof value).to.equal(\"number\");\n                    }\n                }\n            } catch (error) {\n                console.log(\"Error checking number field balance:\", error.message);\n            }\n        })\n\n        pm.test('Response has the `currency` field',function(){\n            try {\n                const jsonResponse = pm.response.json();\n                if (jsonResponse && pm.expect(jsonResponse).to.have.nested.property(`currency`)) {\n                    const value = ld.get(jsonResponse, `currency`, null);\n                    if (value !== null && value !== undefined) {\n                        pm.expect(typeof value).to.equal(\"string\");\n                    }\n                }\n            } catch (error) {\n                console.log(\"Error checking string field currency:\", error.message);\n            }\n        })\n\n            }\n        } catch (error) {\n            console.error('Error during response validation:', error.message);\n        }\n    });\n\n}\n\nif (pm.response.code == 400 && statusMatches){\n    pm.test(\"Bad Request\", function () {\n        pm.expect(pm.response.status).to.be.eql(\"Bad Request\");\n        try {\n            if (responseData !== null && responseData !== undefined) {\n        pm.test('Response has the `code` field',function(){\n            try {\n                const jsonResponse = pm.response.json();\n                if (jsonResponse && pm.expect(jsonResponse).to.have.nested.property(`code`)) {\n                    const value = ld.get(jsonResponse, `code`, null);\n                    if (value !== null && value !== undefined) {\n                        pm.expect(typeof value).to.equal(\"string\");\n                    }\n                }\n            } catch (error) {\n                console.log(\"Error checking string field code:\", error.message);\n            }\n        })\n\n        pm.test('Response has the `message` field',function(){\n            try {\n                const jsonResponse = pm.response.json();\n                if (jsonResponse && pm.expect(jsonResponse).to.have.nested.property(`message`)) {\n                    const value = ld.get(jsonResponse, `message`, null);\n                    if (value !== null && value !== undefined) {\n                        pm.expect(typeof value).to.equal(\"string\");\n                    }\n                }\n            } catch (error) {\n                console.log(\"Error checking string field message:\", error.message);\n            }\n        })\n\n            }\n        } catch (error) {\n            console.error('Error during response validation:', error.message);\n        }\n    });\n\n}\n\nif (pm.response.code == 402 && statusMatches){\n    pm.test(\"Payment source declined\", function () {\n        pm.expect(pm.response.status).to.be.eql(\"Payment Required\");\n    });\n\n}\n"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "name": "Get card transaction history",
              "request": {
                "name": "Get card transaction history",
                "description": {},
                "url": {
                  "path": [
                    "cards",
                    ":cardId",
                    "transactions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "key": "limit",
                      "value": "25"
                    },
                    {
                      "disabled": false,
                      "key": "page",
                      "value": "1"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<uuid>",
                      "key": "cardId",
                      "description": "(Required)"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{bearerToken}}"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "A paginated list of transactions",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "cards",
                        ":cardId",
                        "transactions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "25"
                        },
                        {
                          "key": "page",
                          "value": "1"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "cardId",
                          "description": "(Required)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"pagination\": {\n    \"totalItems\": 4488,\n    \"totalPages\": 9400,\n    \"currentPage\": 2685\n  },\n  \"data\": [\n    {\n      \"transactionId\": \"5a3b841a-b4a5-e600-d8c5-61c7945955e0\",\n      \"timestamp\": \"2007-09-21T00:20:31.679Z\",\n      \"merchant\": \"Starbucks\",\n      \"amount\": 1638.971268724123,\n      \"currency\": \"USD\",\n      \"transactionType\": \"REFUND\"\n    },\n    {\n      \"transactionId\": \"5ff138f9-2fce-3f4b-d0b4-776fc0e38269\",\n      \"timestamp\": \"1968-10-10T13:54:14.711Z\",\n      \"merchant\": \"Starbucks\",\n      \"amount\": 5105.652309167479,\n      \"currency\": \"USD\",\n      \"transactionType\": \"PURCHASE\"\n    }\n  ]\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "cards",
                        ":cardId",
                        "transactions"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "25"
                        },
                        {
                          "key": "page",
                          "value": "1"
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "type": "any",
                          "value": "<uuid>",
                          "key": "cardId",
                          "description": "(Required)"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"code\": \"INVALID_INPUT\",\n  \"message\": \"The email address is already in use.\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://api.evolvepay.example.com/v1",
      "key": "baseUrl"
    },
    {
      "type": "number",
      "value": 200,
      "key": "statusCode"
    }
  ],
  "info": {
    "_postman_id": "9d37ca1e-3675-4589-99b9-d7b69e94e6cc",
    "name": "EvolvePay Prepaid Card Service API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "API for managing users, KYC, prepaid cards, and transactions. This API is used by the EvolvePay mobile app.",
      "type": "text/plain"
    }
  }
}